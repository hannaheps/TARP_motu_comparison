pivot_wider(id_cols = c(motu, site.name, wind.exposure, rat.eradication.status, transect),
values_from = prop_transect, names_from = category, values_fill = 0)%>%
ungroup()
tet_insitu_raw_meta_cat_wide
#coral only: ----
tet_insitu_raw_meta_coral_wide<-
tet_insitu_raw_meta_benthos_wide%>%
select(c(motu, site.name, wind.exposure, rat.eradication.status, transect,
porites, acropora, montipora, pavona, leptoseris, fungia, "porites rus"))%>%
mutate(porites = rowSums(across(c(porites, "porites rus")))) %>% #combine porites + porites rus
select(-c("porites rus"))
tet_insitu_raw_meta_coral_wide
#make species only table and env only table: ----
tet_insitu_raw_meta_coral_sp<-
tet_insitu_raw_meta_coral_wide%>%
ungroup()%>%
select(porites:fungia)
tet_insitu_raw_meta_coral_sp
tet_insitu_raw_meta_broad_sp<-
tet_insitu_raw_meta_cat_wide%>%
ungroup()%>%
select(coral:cyano)
tet_insitu_raw_meta_broad_sp
tet_insitu_raw_env<-
tet_insitu_raw_meta_cat_wide%>%
ungroup()%>%
select(motu:transect)
tet_insitu_raw_env
###calculate diversity for corals----
observed<-specnumber(tet_insitu_raw_meta_coral_sp)
shannon<-diversity(tet_insitu_raw_meta_coral_sp, "shannon")
evenness<-diversity(tet_insitu_raw_meta_coral_sp)/log(specnumber(tet_insitu_raw_meta_coral_sp)) #J = H/log(specnumber(BCI))
tet_insitu_coral_diversity<-
tet_insitu_raw_env %>%
cbind(observed, shannon, evenness)
tet_insitu_coral_diversity
#quick plots----
tet_insitu_coral_diversity%>%
ggplot(aes(x = motu, y = observed, color = wind.exposure, fill = wind.exposure))+
geom_boxplot(outlier.size=0, outlier.stroke=0,outlier.shape=NA, alpha = 0.1) +
geom_point(size = 3, pch=21, alpha= .6, position=position_jitterdodge())+
theme_bw()
tet_insitu_coral_diversity%>%
ggplot(aes(x = motu, y = shannon, color = wind.exposure, fill = wind.exposure))+
geom_boxplot(outlier.size=0, outlier.stroke=0,outlier.shape=NA, alpha = 0.1) +
geom_point(size = 3, pch=21, alpha= .6, position=position_jitterdodge())+
theme_bw()
tet_insitu_coral_diversity%>%
ggplot(aes(x = motu, y = evenness, color = wind.exposure, fill = wind.exposure))+
geom_boxplot(outlier.size=0, outlier.stroke=0,outlier.shape=NA, alpha = 0.1) +
geom_point(size = 3, pch=21, alpha= .6, position=position_jitterdodge())+
theme_bw()
#all between 1-3 coral genera, not showing much....
#run nmds----
nmds_insitu<-metaMDS(tet_insitu_raw_meta_broad_sp, distance = "bray", trymax=200, k=2, autotransform = FALSE)
nmds_insitu
#2 axes stress = 0.06666792, so all good
plot(nmds_insitu)
scores(nmds_insitu, display="species")
#look at plot and centroids, for now just motu and exposure (so sitename). will need to add explanatory variables
plot(nmds_insitu)
ord.fit<-envfit(nmds_insitu~site.name, data = tet_insitu_raw_meta_cat_wide, na.rm=TRUE)
ord.fit #looks like some differences among motu
plot(ord.fit)
#draw polygons
ordihull(nmds_insitu, tet_insitu_raw_meta_cat_wide$site.name, pty=3)
#PERMANOVA
#anosim more influenced by dispersion, so use adonis
#run analysis
ad_insitu1<-adonis2(tet_insitu_raw_meta_broad_sp ~ site.name, data = tet_insitu_raw_meta_cat_wide, method="euclidean")
ad_insitu1
#site explains ~55% of variance
ad_insitu2<-adonis2(tet_insitu_raw_meta_broad_sp ~ motu*wind.exposure, data = tet_insitu_raw_meta_cat_wide, method="euclidean")
ad_insitu2
#motu and motu*exposure significant - 36% and 18% r^2, respectively
#test dispersion using PERMDISP
mod_insitu <- betadisper(vegdist(tet_insitu_raw_meta_broad_sp, method = "bray"), tet_insitu_raw_meta_cat_wide$site.name)
mod_insitu
#test for overall differences
anova(mod_insitu)
#not different
#extract distance to centroid - use TukeyHSD.betadisper from ?betadisper
dist_cent_insitu <-betadisper(d = vegdist(tet_insitu_raw_meta_broad_sp, method = "bray"),
group = tet_insitu_raw_meta_cat_wide$site.name,
type = "centroid", sqrt.dist = FALSE)
dist_cent_insitu
TukeyHSD(dist_cent_insitu,conf.level = .95) #okay this shows CI's for contrasts. note that conf.level affects intervals, but not p-values.
dist_cent_insitudf<-
cbind(tet_insitu_raw_env, dist_cent_insitu$distances) %>%
rename(Distance_to_centroid = "dist_cent_insitu$distances")
dist_cent_insitudf
##SIMPER analysis to test effects of species----
#by site:
sim_insitu<-simper(tet_insitu_raw_meta_broad_sp, tet_insitu_raw_meta_cat_wide$site.name, permutations = 999)
summary(sim_insitu)
#by motu:
sim_insitu_motu<-simper(tet_insitu_raw_meta_broad_sp, tet_insitu_raw_meta_cat_wide$motu, permutations = 999)
summary(sim_insitu_motu)
#by exposure:
sim_insitu_exp<-simper(tet_insitu_raw_meta_broad_sp, tet_insitu_raw_meta_cat_wide$wind.exposure, permutations = 999)
summary(sim_insitu_exp)
##extract site/transect scores----
insitu_spp.sc <- as.data.frame(scores(nmds_insitu, "species"))  #Using the scores function from vegan to extract the species scores and convert to a data.frame
insitu_spp.sc<-
insitu_spp.sc%>%
rownames_to_column(var="Species") # create a column of species, from the rownames of species.scores
insitu_site.sc <- scores(nmds_insitu, display = "sites", shrink = FALSE)
insitu_site.sc
#merge site.sc with metadata and dispersion
nmds_insitu_site_scores<-
bind_cols(dist_cent_insitudf,
as_tibble(insitu_site.sc))
nmds_insitu_site_scores
#plot just to see----
#get hull data:
site.A1 <- nmds_insitu_site_scores[nmds_insitu_site_scores$site.name == "A1", ][chull(nmds_insitu_site_scores[nmds_insitu_site_scores$site.name ==
"A1", c("NMDS1", "NMDS2")]), ]
site.A2 <- nmds_insitu_site_scores[nmds_insitu_site_scores$site.name == "A2", ][chull(nmds_insitu_site_scores[nmds_insitu_site_scores$site.name ==
"A2", c("NMDS1", "NMDS2")]), ]
site.Re1 <- nmds_insitu_site_scores[nmds_insitu_site_scores$site.name == "Re1", ][chull(nmds_insitu_site_scores[nmds_insitu_site_scores$site.name ==
"Re1", c("NMDS1", "NMDS2")]), ]
site.Re2<- nmds_insitu_site_scores[nmds_insitu_site_scores$site.name == "Re2", ][chull(nmds_insitu_site_scores[nmds_insitu_site_scores$site.name ==
"Re2", c("NMDS1", "NMDS2")]), ]
site.Rm1 <- nmds_insitu_site_scores[nmds_insitu_site_scores$site.name == "Rm1", ][chull(nmds_insitu_site_scores[nmds_insitu_site_scores$site.name ==
"Rm1", c("NMDS1", "NMDS2")]), ]
site.Rm2<- nmds_insitu_site_scores[nmds_insitu_site_scores$site.name == "Rm2", ][chull(nmds_insitu_site_scores[nmds_insitu_site_scores$site.name ==
"Rm2", c("NMDS1", "NMDS2")]), ]
hull.data <- rbind(site.A1, site.A2, site.Re1, site.Re2, site.Rm1, site.Rm2)  #combine
hull.data
ggplot() +
geom_text(data=insitu_spp.sc,aes(x=NMDS1,y=NMDS2,label=Species), alpha = .2) +  # add the species labels -
geom_point(data=nmds_insitu_site_scores,aes(x=NMDS1,y=NMDS2,colour=site.name, fill = site.name, pch = site.name), stat="identity", size=5, alpha = .9) +
geom_polygon(data=hull.data,aes(x=NMDS1,y=NMDS2,fill=site.name,group=site.name),alpha=0.30) + # add the convex hulls
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(), #remove gray boxes
text = element_text(size=20))
#legend.title = element_blank()) #remove legend title
#legend.box.background = element_rect(colour = "black", fill='white', linetype='solid', size=1),
# legend.justification=c(1,.9), legend.position=c(1,.9))  #  fix legend
str(nmds_insitu_site_scores) #BROAD GROUPS
str(tet_insitu_coral_diversity) #CORALS
str(tet_insitu_raw_meta_cat_wide) #% cover data
#rename:
tet_insitu_coral_diversity_rn<-
tet_insitu_coral_diversity%>%
rename(coral_observed = observed,
coral_shannon = shannon,
coral_evenness= evenness)
tet_insitu_coral_diversity_rn
tet_insitu_div_comm_dat<-
left_join(tet_insitu_coral_diversity_rn, nmds_insitu_site_scores,
by = c("motu", "site.name", "wind.exposure", "rat.eradication.status", "transect"))
tet_insitu_div_comm_dat
#write.csv(tet_insitu_div_comm_dat, "../output/data/tet_insitu_div_comm_dat.csv")
##keep % cover data, too:
tet_insitu_div_comm_dat_w_cover<-
left_join(tet_insitu_div_comm_dat, tet_insitu_raw_meta_cat_wide,
by = c("motu", "site.name", "wind.exposure", "rat.eradication.status", "transect"))
tet_insitu_div_comm_dat_w_cover
#round % cover data, and make it clear what it is....
tet_insitu_div_comm_dat_w_cover<-
tet_insitu_div_comm_dat_w_cover%>%
mutate(across(c(coral:cyano), round, 2))%>%
rename_with(.fn = ~ paste0(.x, "_prop_cover"), .cols = c("coral":"cyano"))
tet_insitu_div_comm_dat_w_cover
#write.csv(tet_insitu_div_comm_dat_w_cover, "../output/data/tet_insitu_div_comm_dat.csv")
#hard coral
cor.test(tet_insitu_div_comm_dat_w_cover$coral_prop_cover, tet_video_div_comm_dat_w_cover$hard_coral_percent_cover)
#0.7463035
#macroalgae
cor.test(tet_insitu_div_comm_dat_w_cover$macroalgae_prop_cover, tet_video_div_comm_dat_w_cover$macroalgae_percent_cover)
#0.7884377
#pavement
cor.test(tet_insitu_div_comm_dat_w_cover$pavement_prop_cover, tet_video_div_comm_dat_w_cover$pavement_percent_cover)
#0.3124796
#rubble
cor.test(tet_insitu_div_comm_dat_w_cover$rubble_prop_cover, tet_video_div_comm_dat_w_cover$rubble_percent_cover)
#0.4638508
#sand
cor.test(tet_insitu_div_comm_dat_w_cover$sand_prop_cover, tet_video_div_comm_dat_w_cover$sand_percent_cover)
#0.8228589
#other inverts
cor.test(tet_insitu_div_comm_dat_w_cover$other_invert_prop_cover, tet_video_div_comm_dat_w_cover$other_fish_inverts_percent_cover)
#0.1873515
#for largest groups (corals, macroalgae, sand) - very strongly correlated
#only issue is with turf/pavement...
tet_video_raw_meta_broad<-
tet_video_raw_meta%>%
mutate(total_hard_coral = rowSums(across(c(acropora_arborescent:porites_submassive))))%>%
mutate(other_fish_inverts = rowSums(across(c(sea_cucumber, tridacna_giant_clam, fish, corallimorpharia ))))%>%
mutate(turf = rowSums(across(c(turf_algae, turf_rubble))))%>%
mutate(rubble = rowSums(across(c(rubble, sand_rubble))))%>%
select(motu, site.name, wind.exposure, rat.eradication.status, protection, transect,
total_hard_coral, other_fish_inverts, sand, dead_coral, pavement, rubble, turf, cca, macroalgae,
transect_tape)%>%
mutate(total = rowSums(across(c(total_hard_coral:transect_tape))))
str(tet_insitu_raw_meta_benthos_wide)
str(tet_video_raw_meta)
tet_benthos_wide_for_corr<-
full_join(tet_insitu_raw_meta_benthos_wide, tet_video_raw_meta, by =
c("motu",  "site.name", "transect", "rat.eradication.status"), suffix = c("_insitu", "_video"))
tet_benthos_wide_for_corr
cor.test(tet_benthos_wide_for_corr$turf, tet_benthos_wide_for_corr$turf_algae) #-0.1389805
cor.test((tet_benthos_wide_for_corr$turf+tet_benthos_wide_for_corr$pavement_insitu), #in situ
(tet_benthos_wide_for_corr$turf_algae + tet_benthos_wide_for_corr$pavement_video)) #video
#0.04224298
cor.test((tet_benthos_wide_for_corr$turf+tet_benthos_wide_for_corr$pavement_insitu), #in situ
(tet_benthos_wide_for_corr$turf_algae + tet_benthos_wide_for_corr$pavement_video + tet_benthos_wide_for_corr$turf_rubble))
#0.02968842
tet_benthos_wide_for_corr<-
tet_benthos_wide_for_corr%>%
rename("pavement.sand" = "pavement/sand")
cor.test((tet_benthos_wide_for_corr$turf+tet_benthos_wide_for_corr$pavement_insitu + tet_benthos_wide_for_corr$pavement.sand), #in situ
(tet_benthos_wide_for_corr$turf_algae + tet_benthos_wide_for_corr$pavement_video)) #video
#0.411273 **BEST AND SIGNIFICANT*** can make sense because pavement/sand implies lots of turf trapping sediment**
cor.test((tet_benthos_wide_for_corr$turf+tet_benthos_wide_for_corr$pavement_insitu + tet_benthos_wide_for_corr$pavement.sand), #in situ
(tet_benthos_wide_for_corr$turf_algae + tet_benthos_wide_for_corr$pavement_video + tet_benthos_wide_for_corr$turf_rubble))
#0.4056352 - also fine, but probably keep turf/rubble with rubble because otherwise confusing with pavement...
#try including cca, because not counted in situ
cor.test((tet_benthos_wide_for_corr$turf+tet_benthos_wide_for_corr$pavement_insitu + tet_benthos_wide_for_corr$pavement.sand), #in situ
(tet_benthos_wide_for_corr$turf_algae + tet_benthos_wide_for_corr$pavement_video + tet_benthos_wide_for_corr$cca))
#0.4222163 - technically best, but weird to not keep cca seperate....
#check cca - none in situ, but always <1% in video**
ggplot(tet_benthos_wide_for_corr, aes(x = motu, y = cca))+
geom_point(alpha = .2)
#check for rubble:
cor.test((tet_benthos_wide_for_corr$rubble_insitu), #in situ
(tet_benthos_wide_for_corr$rubble_video))
#0.06882663
cor.test((tet_benthos_wide_for_corr$rubble_insitu), #in situ
(tet_benthos_wide_for_corr$rubble_video + tet_benthos_wide_for_corr$sand_rubble))
#0.4549847
cor.test((tet_benthos_wide_for_corr$rubble_insitu), #in situ
(tet_benthos_wide_for_corr$rubble_video + tet_benthos_wide_for_corr$sand_rubble+tet_benthos_wide_for_corr$turf_rubble))
#0.453607
tet_video_div_comm_dat_w_cover #video
tet_video_div_comm_dat_w_cover_for_cor<-
tet_video_div_comm_dat_w_cover%>%
rename_with(~paste0(.,"_video"), -c(motu, site.name, wind.exposure, rat.eradication.status,
protection, transect))
tet_video_div_comm_dat_w_cover_for_cor
tet_insitu_div_comm_dat_w_cover_for_cor<-
tet_insitu_div_comm_dat_w_cover%>%
rename_with(~paste0(.,"_insitu"), -c(motu, site.name, wind.exposure, rat.eradication.status,
transect))
tet_insitu_div_comm_dat_w_cover_for_cor
tet_benthic_all_for_cor<-full_join(tet_video_div_comm_dat_w_cover_for_cor,
tet_insitu_div_comm_dat_w_cover_for_cor,
by = c("motu", "site.name", "wind.exposure", "rat.eradication.status", "transect"))
tet_benthic_all_for_cor
#now do correlations:
tet_benthic_all_for_cor_mat<-as.data.frame(tet_benthic_all_for_cor[,7:35])
cor.mtest(tet_benthic_all_for_cor_mat)
cor.mtest(tet_benthic_all_for_cor_mat)
correlation.matrix <- cor(tet_benthic_all_for_cor_mat, use = "pairwise.complete.obs")
##re-do corrplot and only comapre things we expect to be correlated
?cor
tet_benthic_all_for_cor_mat
correlation.matrix
correlation.matrix.r<-correlation.matrix[c(1,3),]
correlation.matrix.r
tet_benthic_all_for_cor
tet_benthic_all_for_cor_mat.r<-as.data.frame(tet_benthic_all_for_cor[,c(13:22,29:35)])
tet_benthic_all_for_cor_mat.r
correlation.matrix.r1<-cor(tet_benthic_all_for_cor_mat.r, use = "pairwise.complete.obs")
correlation.matrix.r1
cor(tet_benthic_all_for_cor_mat.r$hard_coral_percent_cover_video, tet_benthic_all_for_cor_mat.r$coral_prop_cover_insitu)
cor(c(tet_benthic_all_for_cor_mat.r$hard_coral_percent_cover_video, tet_benthic_all_for_cor_mat.r$coral_prop_cover_insitu),
c(rubble_percent_cover_video$hard_coral_percent_cover_video, tet_benthic_all_for_cor_mat.r$rubble_prop_cover_insitu))
cor(c(tet_benthic_all_for_cor_mat.r$hard_coral_percent_cover_video, tet_benthic_all_for_cor_mat.r$coral_prop_cover_insitu),
c(tet_benthic_all_for_cor_mat.r$rubble_percent_cover_video, tet_benthic_all_for_cor_mat.r$rubble_prop_cover_insitu))
cor(tet_benthic_all_for_cor_mat.r$hard_coral_percent_cover_video, tet_benthic_all_for_cor_mat.r$coral_prop_cover_insitu,
tet_benthic_all_for_cor_mat.r$rubble_percent_cover_video, tet_benthic_all_for_cor_mat.r$rubble_prop_cover_insitu)
correlation.matrix.r1<-cor(tet_benthic_all_for_cor[,13:22], tet_benthic_all_for_cor[,29:35], use = "pairwise.complete.obs")
correlation.matrix.r1
correlation_df_sig<-cor.mtest(tet_benthic_all_for_cor, conf.level = 0.95, method = "spearman")
corrplot(corr=correlation.matrix.r1r[13:22, 29:35], p.mat=correlation.matrix.r1$P[13:22, 29:35], sig.level=0.05,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
corrplot(corr=correlation.matrix.r1$r[13:22, 29:35], p.mat=correlation.matrix.r1$P[13:22, 29:35], sig.level=0.05,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
?corrplot
correlation_df_sig<-cor.mtest(tet_benthic_all_for_cor, conf.level = 0.95, method = "spearman")
correlation_df_sig<-cor.mtest(tet_benthic_all_for_cor_mat.r, conf.level = 0.95, method = "spearman")
correlation_df_sig
correlation_df_sig<-cor.mtest(tet_benthic_all_for_cor[,13:22], tet_benthic_all_for_cor[,29:35], conf.level = 0.95, method = "spearman")
correlation_df_sig<-cor.mtest(c(tet_benthic_all_for_cor[,13:22], tet_benthic_all_for_cor[,29:35]), conf.level = 0.95, method = "spearman")
correlation_df_sig<-cor.mtest(tet_benthic_all_for_cor_mat.r, conf.level = 0.95, method = "spearman")
corrplot(corr=correlation.matrix.r1, p.mat=correlation_df_sig, sig.level=0.05,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
?cor
corrplot(corr=cor(tet_benthic_all_for_cor[,13:22], tet_benthic_all_for_cor[,29:35], use = "pairwise.complete.obs"),
p.mat=correlation_df_sig, sig.level=0.05,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
corrplot(corr=cor(tet_benthic_all_for_cor[,13:22], tet_benthic_all_for_cor[,29:35], use = "pairwise.complete.obs"),
p.mat=correlation_df_sig, sig.level=0.05,
type = "upper",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, title = "Benthic Video- In situ")
corrplot(corr=cor(tet_benthic_all_for_cor[,13:22], tet_benthic_all_for_cor[,29:35], use = "pairwise.complete.obs"),
p.mat=correlation_df_sig$p, sig.level=0.05,
type = "upper",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, title = "Benthic Video- In situ")
corrplot(corr=cor(tet_benthic_all_for_cor_mat.r, use = "pairwise.complete.obs"),
p.mat=correlation_df_sig$p, sig.level=0.05,
type = "upper",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, title = "Benthic Video- In situ")
?cor.mtest
c_df <- Hmisc::rcorr(cor(tet_benthic_all_for_cor_mat.r), type='spearman')
corrplot(corr=c_df$r[13:22,29:35], p.mat=c_df$P[13:22,29:35], sig.level=0.05,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
c_df
c_df <- Hmisc::rcorr(cor(tet_benthic_all_for_cor), type='spearman')
tet_benthic_all_for_cor_mat.r
c_df <- Hmisc::rcorr(cor(tet_benthic_all_for_cor_mat.r), type='spearman')
corrplot(corr=c_df$r[1:10,11:24], p.mat=c_df$P[1:10,11:24], sig.level=0.05,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
c_df
corrplot(corr=c_df$r[1:10,11:17], p.mat=c_df$P[1:10,11:17], sig.level=0.05,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
c_df
corrplot(corr=c_df$r[1:10,11:17], p.mat=c_df$P[1:10,11:17], sig.level=0.05,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
corrplot(corr=c_df$r[1:10,11:17],  sig.level=0.05,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
c_df
corrplot(corr=c_df$r,  sig.level=0.05,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
corrplot(corr=c_df$r[1:8,11:16],  sig.level=0.05,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
corrplot(corr=c_df$r[1:8,10:16],  sig.level=0.05,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
corrplot(corr=c_df$r[1:9,10:16],  sig.level=0.05,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
corrplot(corr=c_df$r[1:11,10:16],  sig.level=0.05,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
tet_benthic_all_for_cor_mat.r
tet_benthic_all_for_cor_mat.r<-as.data.frame(tet_benthic_all_for_cor[,c(13:20,29:35)])
corrplot(corr=cor(tet_benthic_all_for_cor_mat.r, use = "pairwise.complete.obs"),
p.mat=correlation_df_sig$p, sig.level=0.05,
type = "upper",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, title = "Benthic Video- In situ")
corrplot(corr=cor(tet_benthic_all_for_cor_mat.r, use = "pairwise.complete.obs"),
#  p.mat=correlation_df_sig$p, sig.level=0.05,
type = "upper",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, title = "Benthic Video- In situ")
corrplot(corr=c_df$r[1:11,10:16],  sig.level=0.05,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
corrplot(corr=cor(tet_benthic_all_for_cor_mat.r[1:11,10:16]), use = "pairwise.complete.obs"),
corrplot(corr=cor(tet_benthic_all_for_cor_mat.r[1:11],tet_benthic_all_for_cor_mat.r[10:16]), use = "pairwise.complete.obs"),
corrplot(corr=cor(tet_benthic_all_for_cor_mat.r[,1:11],tet_benthic_all_for_cor_mat.r[,10:16]), use = "pairwise.complete.obs"),
corrplot(corr=cor(tet_benthic_all_for_cor_mat.r[,1:11],tet_benthic_all_for_cor_mat.r[,10:16], use = "pairwise.complete.obs"),
#  p.mat=correlation_df_sig$p, sig.level=0.05,
type = "upper",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, title = "Benthic Video- In situ")
corrplot(corr=cor(tet_benthic_all_for_cor_mat.r[,1:11],tet_benthic_all_for_cor_mat.r[,10:16], use = "pairwise.complete.obs"),
#  p.mat=correlation_df_sig$p, sig.level=0.05,
type = "upper",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, title = "Benthic Video- In situ")
correlation.matrix.r1<-cor(tet_benthic_all_for_cor[,13:22], tet_benthic_all_for_cor[,29:35], use = "pairwise.complete.obs")
correlation.matrix.r1
corrplot(corr=correlation.matrix.r1,
#  p.mat=correlation_df_sig$p, sig.level=0.05,
type = "upper",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, title = "Benthic Video- In situ")
#SO: just copied and pasted from corrmatrix:
corrs_reduced<-read.csv("../output/benthic_video_vs_in_situ_corrmatrix_extracted", stringsAsFactors = TRUE)
#SO: just copied and pasted from corrmatrix:
corrs_reduced<-read.csv("../output/benthic_video_vs_in_situ_corrmatrix_extracted.csv", stringsAsFactors = TRUE)
#SO: just copied and pasted from corrmatrix:
corrs_reduced<-read.csv("/../output/benthic_video_vs_in_situ_corrmatrix_extracted.csv", stringsAsFactors = TRUE)
#SO: just copied and pasted from corrmatrix:
corrs_reduced<-read.csv("../output/benthic_video_vs_in_situ_corrmatix_extracted.csv", stringsAsFactors = TRUE)
corrs_reduced
corrplot(corr=corrs_reduced,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
#SO: just copied and pasted from corrmatrix:
corrs_reduced<-read.csv("../output/benthic_video_vs_in_situ_corrmatix_extracted2.csv", stringsAsFactors = TRUE)
corrs_reduced
corrplot(corr=corrs_reduced,
method='color', diag=FALSE, addCoef.col=1, type='upper', insig='blank',
number.cex=.8)
corrplot(corr=corrs_reduced)
#SO: just copied and pasted from corrmatrix:
corrs_reduced<-read.csv("../output/benthic_video_vs_in_situ_corrmatix_extracted.csv", stringsAsFactors = TRUE)
corrs_reduced
ggplot(data = corrs_reduced, aes(x = group, y = corr))+
geom_point()
ggplot(data = corrs_reduced, aes(x = group, y = corr, size = corr, fill = corr, colour = corr))+
geom_point()
ggplot(data = corrs_reduced, aes(x = group, y = corr, size = corr, fill = corr, colour = corr))+
geom_point()+
ylim(c(0,1))
ggplot(data = corrs_reduced, aes(x = group, y = group, size = corr, fill = corr, colour = corr))+
geom_point()+
ylim(c(0,1))
ggplot(data = corrs_reduced, aes(x = group, y = group, size = corr, fill = corr, colour = corr))+
geom_point()
ggplot(data = corrs_reduced, aes(x = group, y = group, size = corr, fill = corr, colour = corr))+
geom_point()+
theme_bw()
ggplot(data = corrs_reduced, aes(x = group, y = group, size = corr, fill = corr, colour = corr))+
geom_point()+
scale_size_continuous(range = c(3, 7))+
theme_bw()
ggplot(data = corrs_reduced, aes(x = group, y = group, size = corr, fill = corr, colour = corr))+
geom_point()+
scale_size_continuous(range = c(5, 10))+
theme_bw()
ggplot(data = corrs_reduced, aes(x = group, y = 1, size = corr, fill = corr, colour = corr))+
geom_point()+
scale_size_continuous(range = c(5, 10))+
theme_bw()
scale_fill_continuous
?scale_fill_continuous
ggplot(data = corrs_reduced, aes(x = group, y = 1, size = corr, fill = corr, colour = corr))+
geom_point()+
scale_size_continuous(range = c(5, 10))+
scale_fill_continuous(type = "viridis")+
theme_bw()
ggplot(data = corrs_reduced, aes(x = group, y = 1, size = corr, fill = corr, colour = corr))+
geom_point()+
scale_size_continuous(range = c(5, 10))+
scale_fill_continuous(type = "viridis")+
scale_colour_continuous(type = "viridis")+
theme_bw()
?corrplot
ggplot(data = corrs_reduced, aes(x = group, y = 1, size = corr, fill = corr, colour = corr))+
geom_point()+
scale_size_continuous(range = c(5, 10))+
scale_fill_continuous(type = "viridis")+
scale_colour_continuous(type = "COL2('RdBu', 200)")+
theme_bw()
ggplot(data = corrs_reduced, aes(x = group, y = 1, size = corr, fill = corr, colour = corr))+
geom_point()+
scale_size_continuous(range = c(5, 10))+
scale_fill_continuous(type = "viridis")+
scale_colour_continuous(type = "gradient")+
theme_bw()
ggplot(data = corrs_reduced, aes(x = group, y = 1, size = corr, fill = corr, colour = corr))+
geom_point()+
scale_size_continuous(range = c(5, 10))+
scale_fill_continuous(type = "viridis")+
scale_color_gradient2(low="blue", mid="white", high="red",
limits = c(0, 1), oob = scales::squish)  theme_bw()
ggplot(data = corrs_reduced, aes(x = group, y = 1, size = corr, fill = corr, colour = corr))+
geom_point()+
scale_size_continuous(range = c(5, 10))+
scale_fill_continuous(type = "viridis")+
scale_color_gradient2(low="blue", mid="white", high="red",
limits = c(0, 1), oob = scales::squish)  +
theme_bw()
?scale_colour_gradient
ggplot(data = corrs_reduced, aes(x = group, y = 1, size = corr, fill = corr, colour = corr))+
geom_point()+
scale_size_continuous(range = c(5, 10))+
scale_fill_continuous(type = "viridis")+
scale_color_gradient2(low="red", mid="white", high="blue",
limits = c(0, 1), oob = scales::squish)  +
theme_bw()
ggplot(data = corrs_reduced, aes(x = group, y = 1, size = corr, fill = corr, colour = corr))+
geom_point()+
scale_size_continuous(range = c(5, 10))+
scale_fill_continuous(type = "viridis")+
scale_color_gradient2(low="red", mid="white", high="blue",
limits = c(-1, 1), oob = scales::squish)  +
theme_bw()
ggplot(data = corrs_reduced, aes(x = group, y = 1, size = corr, colour = corr))+
geom_point()+
scale_size_continuous(range = c(5, 10))+
#scale_fill_continuous(type = "viridis")+
scale_color_gradient2(low="red", mid="white", high="blue",
limits = c(-1, 1), oob = scales::squish)  +
theme_bw()
ggplot(data = corrs_reduced, aes(x = group, y = 1, size = corr, colour = corr))+
geom_point()+
scale_size_continuous(range = c(5, 10), limits = c(0,1))+
#scale_fill_continuous(type = "viridis")+
scale_color_gradient2(low="red", mid="white", high="blue",
limits = c(-1, 1), oob = scales::squish)  +
theme_bw()
ggplot(data = corrs_reduced, aes(x = group, y = corr, size = corr, colour = corr))+
geom_point()+
scale_size_continuous(range = c(5, 10), limits = c(0,1))+
#scale_fill_continuous(type = "viridis")+
scale_color_gradient2(low="red", mid="white", high="blue",
limits = c(-1, 1), oob = scales::squish)  +
theme_bw()
ggplot(data = corrs_reduced, aes(x = group, y = corr, size = corr, colour = corr))+
geom_point()+
scale_size_continuous(range = c(5, 10), limits = c(0,1))+
#scale_fill_continuous(type = "viridis")+
scale_color_gradient2(low="red", mid="white", high="blue",
limits = c(-1, 1), oob = scales::squish)  +
theme_bw()+
ylim(c(0,1))
