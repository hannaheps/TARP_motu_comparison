corrplot(cor(fishn15.seabirds.wide2[,1:5])[2:5,1, drop=FALSE],  method="circle",
tl.col="black", cl.pos='r', col.lim=c(-1,1), cl.length=9, cl.ratio=1)
corrplot(cor(fishn15.seabirds.wide2[,1:5])[2:5,1, drop=FALSE],)  method="circle",
corrplot(cor(fishn15.seabirds.wide2[,1:5])[2:5,1, drop=FALSE],)
fishn15.seabirds.wide2[,1:5])[2:5,1, drop=FALSE]
corrplot(cor(fishn15.seabirds.wide2[,1:5])[2:5,1, drop=FALSE])
cor.mat_sb_fishn15_fish_by_sb_only
corrplot(cor(fishn15.seabirds.wide2[,1:5])[2:5,1, drop=FALSE],
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5,  cl.pos = "b")
#make plot:
corrplot(cor.mat_sb_fishn15_fish_by_sb_only, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5,  cl.pos = "b", cl.ratio = .21)
colorlegend(c(seq(-1,1,.25)), align="l", vertical=TRUE, addlabels=TRUE)
col = COL2
colorlegend(col,c(seq(-1,1,.25)), align="l", vertical=TRUE, addlabels=TRUE)
corrplot(cor.mat_sb_fishn15_fish_by_sb_only, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5,  cl.pos = "b", cl.ratio = .21)
colorlegend(col,c(seq(-1,1,.25)), align="l", vertical=TRUE, addlabels=TRUE)
col = c('RdBu', 'BrBG', 'PiYG', 'PRGn', 'PuOr', 'RdYlBu')
for(i in 1:length(col)) {
colorlegend(COL2(col[i]), -10:10/10, align = 'l', cex = 0.8, xlim = c(0, 1),
ylim = c(i/length(col)-0.1, i/length(col)), vertical = FALSE)
text(-0.01, i/length(col)-0.02, col[i], adj = 0.5, pos = 2, cex = 0.8)
}
for(i in 1:length(col)) {
colorlegend(COL2(col[i]), -10:10/10, align = 'l', cex = 0.8, xlim = c(0, 1),
ylim = c(i/length(col)-0.1, i/length(col)), vertical = FALSE)
text(-0.01, i/length(col)-0.02, col[i], adj = 0.5, pos = 2, cex = 0.8)
}
corrplot(cor.mat_sb_fishn15_fish_by_sb_only, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5,  cl.pos = "b", cl.ratio = .21)
colorlegend(col,c(seq(-1,1,.25)), align="l", vertical=TRUE, addlabels=TRUE)
#make plot:
corrplot(cor.mat_sb_fishn15_fish_by_sb_only, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5)
corrplot(cor.mat_sb_fishn15_byspp_no_algae, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "b")
###save:----
cor.mat_sb_fishn15_byspp_no_algae<- cor(fishn15.seabirds.wide[c(3,8,10,11,9)], method = "spearman", use = "pairwise.complete.obs")
corrplot(cor.mat_sb_fishn15_byspp_no_algae, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "b")
pdf(file = "../output/seabird-fishn15/seabirds_fishn15_corr_plot_by_sp_sb_onlySPEARMAN.pdf")
corrplot(cor.mat_sb_fishn15_fish_by_sb_only, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5)
dev.off()
pdf(file = "../output/seabird-fishn15/seabirds_fishn15_corr_plot_by_sp_sb_onlySPEARMAN_LEGEND.pdf")
corrplot(cor.mat_sb_fishn15_byspp_no_algae, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "b")
dev.off()
corrplot(cor(fishn15.seabirds.wide2[c(3,8,11,9, 10)], method = "spearman", use = "pairwise.complete.obs"), type = "upper",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5)
corrplot(cor(fishn15.seabirds.wide[c(3,8,11,9,10)], method = "spearman", use = "pairwise.complete.obs"), type = "upper",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5)
fishn15.seabirds.wide2
fishn15.seabirds.wide2 <-
pivot_wider(fishn15.seabirds.long2,names_from = c("species"),values_from = c("n15"))
corrplot(cor(fishn15.seabirds.wide2[c(3,8,11,9,10)], method = "spearman", use = "pairwise.complete.obs"), type = "upper",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5)
fishn15.seabirds.wide2
fishn15.seabirds.wide
#try with seabirds and algae:
cor.mat_sb_fishn15_fish_by_sb_algae_only<- cor(x = fishn15.seabirds.wide[c(3,7)], y =fishn15.seabirds.wide[c(8,10,11,9)], method = "spearman", use = "pairwise.complete.obs")
cor.mat_sb_fishn15_fish_by_sb_algae_only
#try with seabirds and algae:
cor.mat_sb_fishn15_fish_by_sb_algae_only<- cor(x = fishn15.seabirds.wide[c(3,4,5,6,7)], y =fishn15.seabirds.wide[c(8,10,11,9)], method = "spearman", use = "pairwise.complete.obs")
cor.mat_sb_fishn15_fish_by_sb_algae_only
fishn15.seabirds.wide
library(plyr)
library(tidyverse)
library(corrplot)
library(lme4)
library(nlme)
library(car)
library(jtools)
library(emmeans)
library(sjPlot)
library(plyr)
library(tidyverse)
library(corrplot)
library(lme4)
library(nlme)
library(car)
library(jtools)
library(emmeans)
##Bring in seabird data
seabirds <- read.csv("../../seabird_data/outputs/seabird_dens_bio_focal_data.csv")
seabirds$site.name <- paste(seabirds$Motu, seabirds$Exposure, sep = "_")
##bring in algae data
algae <- read.csv("../../algae_isotopes/data/Tetiaroa_Turbinaria_Transects_November_2021_compiledMarch2023.csv")
View(algae)
algae$Distance_to_shore <- as.factor(algae$Distance_to_shore)
algae$Side[algae$Side=="leeward"] <- "Protected"
algae$Side[algae$Side == "windward"] <- "Exposed"
names(algae)[names(algae) == 'Side'] <- 'Exposure'
#manipulate algae data frame to get average N15 per motu, site and distance from shore
sum.algae <- ddply(algae, c("Motu", "Exposure", "Distance_to_shore"),summarise,
mean.N15 = mean(N15)
)
sum.algae
#spread data to get values for each distance from shore
sum.algae <- sum.algae %>% spread(Distance_to_shore, mean.N15)
sum.algae <- sum.algae %>% rename(c("10" = "N.15_at_10m",
"20" = "N.15_at_20m", "30" = "N.15_at_30m",
"40" = "N.15_at_40m"))
#Create a site.name that combines motu and exposure in order to merge with seabrid data
sum.algae$site.name <-  paste(sum.algae$Motu, sum.algae$Exposure, sep = "_")
##Combine seabird and algae data
algae.seabirds <- right_join(seabirds, sum.algae)
View(algae.seabirds)
algae.seabirds <- algae.seabirds[,-1] #This is just to remove duplicate columns
#algae.seabirds <- algae.seabirds[,-c(2,7)] #Use this one for Iti data, it has slightly different column #s
View(algae.seabirds)
#save combined data
write.csv(algae.seabirds, "../output/n15_seabirds_combined_no_iti.csv")
data.matrix <- as.data.frame(algae.seabirds[,c(3:18,20:23)])
View(data.matrix)
cor.mtest(data.matrix)
correlation.matrix.psn <- cor(data.matrix, use = "pairwise.complete.obs", method = "pearson")
write.csv(correlation.matrix.psn, "../output/n15_seabirds_corrmatrix_no_iti_pearson.csv")
correlation.matrix.sp <- cor(data.matrix, use = "pairwise.complete.obs", method  = "spearman")
write.csv(correlation.matrix.sp, "../output/n15_seabirds_corrmatrix_no_iti_spearman.csv")
#file = "../output/correlation_seabird_N15_spearman.pdf")
corrplot(cor(data.matrix, use = "pairwise.complete.obs", method = "pearson"), type = "upper",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", title = "seabirds vs. N15")
corrplot(cor(data.matrix, use = "pairwise.complete.obs", method = "spearman"), type = "upper",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", title = "seabirds vs. N15")
data.matrix.bb <- as.data.frame(algae.seabirds[,c(5,20:23)])
corrplot(cor(data.matrix.bb, use = "pairwise.complete.obs", method = "spearman"), type = "upper",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", title = "seabirds vs. N15")
data.matrix
cor.mat_sb_fishn15_fish_by_sb_only<- cor(x = algae.seabirds[c(3:18)], y =algae.seabirds[c(20:23)], method = "spearman", use = "pairwise.complete.obs")
cor.mat_sb_fishn15_fish_by_sb_only
cor.mat_sb__algae<- cor(x = algae.seabirds[c(3:18)], y =algae.seabirds[c(20:23)], method = "spearman", use = "pairwise.complete.obs")
corrplot(cor.mat_sb__algae, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "b")
corrplot(cor.mat_sb__algae,
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "b")
corrplot(cor.mat_sb__algae,
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "r")
cor.mat_sb__algae<- cor(x = algae.seabirds[c(3:18,20:23)], y =algae.seabirds[c(20:23)], method = "spearman", use = "pairwise.complete.obs")
corrplot(cor.mat_sb__algae,
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "r")
corrplot(cor.mat_sb__algae, type = "upper".
corrplot(cor.mat_sb__algae, type = "upper",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "r")
corrplot(cor.mat_sb__algae, type = "lower",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "r")
corrplot(cor.mat_sb__algae, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "r")
cor.mat_sb__algae<- cor(x = algae.seabirds[c(3:18)], y =algae.seabirds[c(20:23)], method = "spearman", use = "pairwise.complete.obs")
corrplot(cor.mat_sb__algae, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "r")
corrplot(cor.mat_sb__algae, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "r", cl.ratio = 1)
corrplot(cor.mat_sb__algae, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "r", cl.ratio = .5)
pdf(file = "../output/seabird-algaen15/corrplot_allseabirds_vs_algaen15_spearman.pdf")
corrplot(cor.mat_sb__algae, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "r", cl.ratio = .5)
dev.off()
algae$site.name <- paste(algae$Motu, algae$Exposure, sep = "_")
n15.all.seabirds <- merge(algae, seabirds[,-1], by = "site.name", all = TRUE, no.dups = TRUE)
View(n15.all.seabirds)
names(n15.all.seabirds)[names(n15.all.seabirds) == 'Exposure.x'] <- 'Exposure'
names(n15.all.seabirds)[names(n15.all.seabirds) == 'Motu.x'] <- 'Motu'
n15.all.seabirds$Distance_to_shore <- as.factor(n15.all.seabirds$Distance_to_shore)
#Add in seabird_level
n15.all.seabirds <-
n15.all.seabirds%>%
mutate(seabird_level = case_when(breeding_biomass_kgha_side<10 ~"low",
breeding_biomass_kgha_side>10&breeding_biomass_kgha_side <200 ~"mid",
breeding_biomass_kgha_side>200 ~"high"))%>%
mutate(seabird_level = as.factor(seabird_level))%>%
mutate(seabird_level = fct_relevel(seabird_level, "low", "mid", "high"))
mod.lme <- lme(N15 ~ seabird_level*Distance_to_shore + Exposure, random = ~1|site.name, n15.all.seabirds, method = "REML")
#Trial an optimized version (more complex)
mod.lme1 <- lme(N15 ~ seabird_level*Distance_to_shore + Exposure, random = ~ seabird_level | site.name, n15.all.seabirds,
method = "REML",control = lmeControl(opt = "optim", method = "BFGS"))
#Check AIC values & model fit
anova(mod.lme, mod.lme1)  #lme is better AIC value
plot_grid(plot_model(mod.lme, type = "diag"))
#Check AIC values & model fit
anova(mod.lme, mod.lme1)  #lme is better AIC value
#test statistics
summary(mod.lme)
Anova(mod.lme)
#Response: N15
#                                 Chisq Df Pr(>Chisq)
#seabird_level                   51.877  2  5.434e-12 ***
#Distance_to_shore               73.344  3  8.201e-16 ***
#Exposure                        21.052  1  4.471e-06 ***
#seabird_level:Distance_to_shore 32.186  6  1.503e-05 ***
vif(mod.lme)
plot_summs(mod.lme)
#look at emmeans:
mod.lme%>%
emmeans(~ seabird_level,
type = "response")
emmeans(mod.lme, list(pairwise ~ seabird_level*Distance_to_shore), type = "response", adjust = "fdr")
emmeans(mod.lme, list(pairwise ~ seabird_level|Distance_to_shore), type = "response", adjust = "fdr")
#can also look within each distance to shore so multiple comparisons not as overwhelming:
emmeans(mod.lme, list(pairwise ~ seabird_level|Distance_to_shore), type = "response", adjust = "fdr")
emmeans(mod.lme, list(pairwise ~ Distance_to_shore|seabird_level), type = "response", adjust = "fdr")
#test statistics
summary(mod.lme)
summary(mod.lme)
mod.lme
Anova(mod.lme)
mod.lmer <- lmer(N15 ~ seabird_level*Distance_to_shore + Exposure + (~1|site.name), data = n15.all.seabirds)
mod.lmer <- lmer(N15 ~ seabird_level*Distance_to_shore + Exposure + (1|site.name), data = n15.all.seabirds)
summary(mod.lmer)
anova(mod.lmer)
Anova(mod.lmer)
#can also look within each distance to shore or seabird level so multiple comparisons not as overwhelming:
emmeans(mod.lme, list(pairwise ~ seabird_level|Distance_to_shore), type = "response", adjust = "fdr")
emmeans(mod.lme, list(pairwise ~ Distance_to_shore|seabird_level), type = "response", adjust = "fdr")
plot_data_n15_sb<-emmip(mod.lme, ~ seabird_level*Distance_to_shore,
type = "response", CIs = TRUE, plotit=FALSE)
plot_data_n15_sb
response_plot_n15<-
ggplot(data = plot_data_n15_sb, aes(x = Distance_to_shore, y = yvar, color = seabird_level, fill = seabird_level, group = seabird_level) )+
#  geom_point(pch = 4,  position = position_dodge(.3))+
geom_pointrange(aes(ymin = LCL, ymax = UCL), alpha = .3, linewidth = 2, size = 0.2, position = position_dodge(.1)) + #,  position = position_dodge(.3)
# geom_point(data = fishn15.seabirds.cond.r,
#  aes(y = n15, x = seabird_level), size = 2.5, alpha = .5,  position = position_dodge(.3))+
geom_line(alpha = .5 ,  position = position_dodge(.1))+
#scale_fill_manual(values = my_colors)+
# scale_color_manual(values = my_colors) +
ylab(expression(italic(delta)^15*N))+
#scale_y_continuous(labels = scales::label_percent(accuracy = .1, scale = 1),  limits = c(0, 100), expand = expansion(0, 0))+
scale_fill_manual(values = c( "low" = "#CD1913", "mid" = "#F2BB05", "high" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
scale_colour_manual(values = c( "low" = "#CD1913", "mid" = "#F2BB05", "high" ="#2F9D3E"))+#low-mid-high = red-yellow-green
xlab("Distance From Shore (m)")+
labs(color='Seabird Level', fill = 'Seabird Level') +
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank()) #,
response_plot_n15
#can also look within each distance to shore or seabird level so multiple comparisons not as overwhelming:
emmeans(mod.lme, list(pairwise ~ seabird_level|Distance_to_shore), type = "response", adjust = "fdr")
#can also look within each distance to shore or seabird level so multiple comparisons not as overwhelming:
emmeans(mod.lme, list(pairwise ~ seabird_level|Distance_to_shore), type = "response", adjust = "fdr")
#can also look within each distance to shore or seabird level so multiple comparisons not as overwhelming:
emmeans(mod.lme, list(pairwise ~ seabird_level|Distance_to_shore), type = "response", adjust = "fdr")
emmeans(mod.lme, list(pairwise ~ Distance_to_shore|seabird_level), type = "response", adjust = "fdr")
library(tidyverse)
library(plyr)
library(lme4)
library(car)
library(jtools)
library(emmeans)
library(multcompView)
library(multcomp)
library(corrplot)
library(vegan)
seabirds <- read.csv("../output/n15_seabirds_combined_no_iti.csv", strip.white = T, header = T)
seabirds <- read.csv("../output/n15_seabirds_combined_no_iti.csv", strip.white = T, header = T)
#remove the N15 data as we will need to manually add in 10 and 40m due to the macroalgae data structure later
seabirds <- seabirds[, -c(2:5)]
#for some reason we don't have exposure on its own so give this a try:
seabirds$exposure <- seabirds$site.name
seabirds <- separate(data = seabirds, col = exposure, into = c("motu", "exposure"))
algae.div <- read.csv("../../algae_diversity_surveys/output/algae_div_summary_all_new.csv", strip.white = T, header = T)
#make sure distance along transect is a factor
algae.div$distance.along.transect <- as.factor(algae.div$distance.along.transect)
algae.div.seabirds <- merge(algae.div, seabirds, by = "site.name", all = TRUE, no.dups = TRUE)
n15 <- read.csv("../output/seabird-algaen15/seabird_algaen15_noiti_totaldata.csv", header = TRUE, strip.white = TRUE)
n15$distance.along.transect <- as.factor(n15$Distance_to_shore)
n15 <- n15[,c(2,17,40)] #remove the column X
algae.div.seabirds <- merge(n15, algae.div.seabirds, by = c("site.name", "distance.along.transect"), all = TRUE, no.dups = TRUE)
#remove the 20 and 30m from shore distances
algae.div.seabirds <- algae.div.seabirds %>% subset(distance.along.transect != c("20", "30"))
#write to csv as output
#write.csv(algae.div.seabirds, "../output/seabird-algaediv/seabird_algaediv_noiti_totaldata_new.csv", row.names= F)
algae.div.seabirds.lvl <-
algae.div.seabirds%>%
mutate(seabird_level = case_when(breeding_biomass_kgha_side<10 ~"low",
breeding_biomass_kgha_side>10&breeding_biomass_kgha_side <200 ~"mid",
breeding_biomass_kgha_side>200 ~"high"))%>%
mutate(seabird_level = as.factor(seabird_level))%>%
mutate(seabird_level = fct_relevel(seabird_level, "low", "mid", "high"))
#make richness into a numeric category
algae.div.seabirds.lvl$richness <- as.numeric(algae.div.seabirds.lvl$richness)
hist(algae.div.seabirds.lvl$richness)
shapiro.test((algae.div.seabirds.lvl$richness)) # Looks normally distributed but p = 0.0002252
qqPlot(algae.div.seabirds.lvl$richness)
distplot(algae.div.seabirds.lvl$richness, type="poisson") #not bad - maybe try?
#not poisson
richness.lmm<-lmer(richness~seabird_level*distance.along.transect + exposure + (1|site.name), data = algae.div.seabirds.lvl)
#poisson
richness.lmm2 <- glmer(richness ~ seabird_level*distance.along.transect + exposure + (1|site.name), family = "poisson", data = algae.div.seabirds.lvl)
summary(richness.lmm2)
anova(richness.lmm2)
#look at emmeans:
richness.lmm2 %>%
emmeans(~ seabird_level,
type = "response")
emmeans(richness.lmm2, list(pairwise ~ seabird_level*distance.along.transect), type = "response", adjust = "fdr")
#also limit comparisons:
emmeans(richness.lmm2, list(pairwise ~ seabird_level|distance.along.transect), type = "response", adjust = "fdr")
#also limit comparisons:
emmeans(richness.lmm2, list(pairwise ~ seabird_level|distance.along.transect), type = "response", adjust = "fdr")
emmeans(richness.lmm2, list(pairwise ~ distance.along.transect|seabird_level), type = "response", adjust = "fdr")
#poisson
richness.lmm2 <- glmer(richness ~ seabird_level*distance.along.transect + exposure + (1|site.name), family = "poisson", data = algae.div.seabirds.lvl)
#richness - algae n15-----
richness.n15.lmm<-lmer(richness~N15*distance.along.transect + exposure + (1|site.name), data = algae.div.seabirds.lvl)
summary(richness.n15.lmm)
Anova(richness.n15.lmm)
emtrends(richness.n15.lmm,  ~ distance.along.transect, var = "N15")
#looks like negative effect of n15 at 10 m, but not 40-m
test(emtrends(richness.n15.lmm, ~ distance.along.transect, var = "N15", adjust = "fdr"))
library(tidyverse)
library(lme4)
library(car)
library(jtools)
library(emmeans)
library(corrplot)
library(vegan)
#if want pairwise adonis:
#install.packages('devtools')
#library(devtools)
#install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis") library(pairwise.adonis)
seabirds <- read.csv("../output/n15_seabirds_combined_no_iti.csv", strip.white = T, header = T)
load("../../fish_benthic_surveys/output/data/benthic_community_data.Rdata")
benthic_vid<-tet_video_div_comm_dat_w_cover
benthic_situ<-tet_insitu_div_comm_dat_w_cover
benthic_vid
#make combined site name column in benthic data
benthic_vid_dat<-
benthic_vid%>%
mutate(motu = str_to_title(motu),
protection = str_to_title(protection))%>%
unite("site.name", c(motu, protection), sep = "_", remove = FALSE)
benthic_vid_dat
benthic.vid.seabirds<-left_join(benthic_vid_dat,
select(seabirds, c("site.name", "breeding_biomass_kgha_side")),
by = "site.name")%>%
mutate(site.name = as.factor(site.name))
library(tidyverse)
library(lme4)
library(car)
library(jtools)
library(emmeans)
library(corrplot)
seabirds <- read.csv("../output/n15_seabirds_combined_no_iti.csv", strip.white = T, header = T)
fish_n15_cond <- read.csv("../../fish_isotopes/output/fish_n15_condition.csv", stringsAsFactors = TRUE)
algae_n15<-read.csv("../output/n15_seabirds_combined_no_iti.csv")
#make combined site name column in fish_n15
fishn15.seabirds.cond<-right_join(select(seabirds, c("site.name", "breeding_biomass_kgha_side")),
select(fish_n15_cond, c("site.name", "motu", "fish.id", "species",
"month.caught", "year.caught", "protection", "TL.cm", "FL.cm", "SL.cm", "whole.weight.g",
"liver.weight.g", "n15", "c13", "n.percent", "c.percent")),
by = "site.name")%>%
mutate(site.name = as.factor(site.name))
library(tidyverse)
library(lme4)
library(car)
library(jtools)
library(emmeans)
library(corrplot)
seabirds <- read.csv("../output/n15_seabirds_combined_no_iti.csv", strip.white = T, header = T)
fish_n15_cond <- read.csv("../../fish_isotopes/output/fish_n15_condition.csv", stringsAsFactors = TRUE)
algae_n15<-read.csv("../output/n15_seabirds_combined_no_iti.csv")
fishn15.seabirds.cond<-right_join(select(seabirds, c("site.name", "breeding_biomass_kgha_side")),
select(fish_n15_cond, c("site.name", "motu", "fish.id", "species",
"month.caught", "year.caught", "protection", "TL.cm", "FL.cm", "SL.cm", "whole.weight.g",
"liver.weight.g", "n15", "c13", "n.percent", "c.percent")),
by = "site.name")%>%
mutate(site.name = as.factor(site.name))
library(tidyverse)
library(lme4)
library(car)
library(jtools)
library(emmeans)
library(corrplot)
seabirds <- read.csv("../output/n15_seabirds_combined_no_iti.csv", strip.white = T, header = T)
fish_n15_cond <- read.csv("../../fish_isotopes/output/fish_n15_condition.csv", stringsAsFactors = TRUE)
algae_n15<-read.csv("../output/n15_seabirds_combined_no_iti.csv")
#make combined site name column in fish_n15
fishn15.seabirds.cond<-right_join(select(seabirds, c("site.name", "breeding_biomass_kgha_side")),
select(fish_n15_cond, c("site.name", "motu", "fish.id", "species",
"month.caught", "year.caught", "protection", "TL.cm", "FL.cm", "SL.cm", "whole.weight.g",
"liver.weight.g", "n15", "c13", "n.percent", "c.percent")),
by = "site.name")%>%
mutate(site.name = as.factor(site.name))
algae_n15
seabirds
fishn15.seabirds.cond<-right_join(select(seabirds, c("site.name", "breeding_biomass_kgha_side")),
select(fish_n15_cond, c("site.name", "motu", "fish.id", "species",
"month.caught", "year.caught", "protection", "TL.cm", "FL.cm", "SL.cm", "whole.weight.g",
"liver.weight.g", "n15", "c13", "n.percent", "c.percent")),
by = "site.name")%>%
mutate(site.name = as.factor(site.name))
select(seabirds, c("site.name", "breeding_biomass_kgha_side"))
seabirds
select(seabirds, c("site.name", "breeding_biomass_kgha_side"))
library(tidyverse)
library(lme4)
library(car)
library(jtools)
library(emmeans)
library(corrplot)
seabirds <- read.csv("../output/n15_seabirds_combined_no_iti.csv", strip.white = T, header = T)
fish_n15_cond <- read.csv("../../fish_isotopes/output/fish_n15_condition.csv", stringsAsFactors = TRUE)
algae_n15<-read.csv("../output/n15_seabirds_combined_no_iti.csv")
#make combined site name column in fish_n15
fishn15.seabirds.cond<-right_join(select(seabirds, c("site.name", "breeding_biomass_kgha_side")),
select(fish_n15_cond, c("site.name", "motu", "fish.id", "species",
"month.caught", "year.caught", "protection", "TL.cm", "FL.cm", "SL.cm", "whole.weight.g",
"liver.weight.g", "n15", "c13", "n.percent", "c.percent")),
by = "site.name")%>%
mutate(site.name = as.factor(site.name))
seabirds%>%
select(c("site.name", "breeding_biomass_kgha_side"))
?select
seabirds%>%
select(site.name)
seabirds%>%
dplyr::select(site.name)
library(tidyverse)
library(lme4)
library(car)
library(jtools)
library(emmeans)
library(corrplot)
seabirds <- read.csv("../output/n15_seabirds_combined_no_iti.csv", strip.white = T, header = T)
fish_n15_cond <- read.csv("../../fish_isotopes/output/fish_n15_condition.csv", stringsAsFactors = TRUE)
algae_n15<-read.csv("../output/n15_seabirds_combined_no_iti.csv")
seabirds%>%
dplyr::select(site.name)
fishn15.seabirds.cond<-right_join(select(seabirds, c("site.name", "breeding_biomass_kgha_side")),
select(fish_n15_cond, c("site.name", "motu", "fish.id", "species",
"month.caught", "year.caught", "protection", "TL.cm", "FL.cm", "SL.cm", "whole.weight.g",
"liver.weight.g", "n15", "c13", "n.percent", "c.percent")),
by = "site.name")%>%
mutate(site.name = as.factor(site.name))
#make combined site name column in fish_n15
fishn15.seabirds.cond<-right_join(dplyr::select(seabirds, c("site.name", "breeding_biomass_kgha_side")),
dplyr::select(fish_n15_cond, c("site.name", "motu", "fish.id", "species",
"month.caught", "year.caught", "protection", "TL.cm", "FL.cm", "SL.cm", "whole.weight.g",
"liver.weight.g", "n15", "c13", "n.percent", "c.percent")),
by = "site.name")%>%
mutate(site.name = as.factor(site.name))
fishn15.seabirds.cond
#add k and hsi----
fishn15.seabirds.cond<-
fishn15.seabirds.cond%>%
mutate(K = 100*(whole.weight.g/(TL.cm^3)),
HSI = liver.weight.g/whole.weight.g*100)
fishn15.seabirds.cond
#3 sites, add seabird levels because non-linear possible and only 3 sites so needs to be categorical:----
#Aie protected = 378.720000
#Reiono exposed = 115.353333
#Rimatuu protected = 5.390526
fishn15.seabirds.cond<-
fishn15.seabirds.cond%>%
mutate(seabird_level = case_when(breeding_biomass_kgha_side<10 ~"low",
breeding_biomass_kgha_side>10&breeding_biomass_kgha_side <200 ~"mid",
breeding_biomass_kgha_side>200 ~"high"))%>%
mutate(seabird_level = as.factor(seabird_level))%>%
mutate(seabird_level = fct_relevel(seabird_level, "low", "mid", "high"))%>%
relocate(seabird_level, .before = breeding_biomass_kgha_side)
fishn15.seabirds.cond
##remove C. argus because n = 1 for 'high' (Aie)----
fishn15.seabirds.cond.r<-
fishn15.seabirds.cond%>%
filter(species != "Cephalopholis argus")%>%
droplevels()
##check sample sizes, lengths per site:----
fishn15.seabirds.cond.r%>%
group_by(species, site.name)%>%
summarize(n = length(n15))
#n15----
fish_n15_lm<-lm(n15~ seabird_level*species,
data = fishn15.seabirds.cond)
summary(fish_n15_lm)
anova(fish_n15_lm)#everything significant
plot(fish_n15_lm) #qq not great, and one point (10) with extremely high leverage = Aie C. argus because n = 1 for this***
#re-run without argus, n15---
fish_n15_r_lm<-lm(n15~ seabird_level*species,
data = fishn15.seabirds.cond.r)
summary(fish_n15_r_lm)
anova(fish_n15_r_lm) #everything significant
plot(fish_n15_r_lm) #qq not great
fish_n15_r_log_lm<-lm(log(n15)~ seabird_level*species,
data = fishn15.seabirds.cond.r)
summary(fish_n15_r_log_lm)
anova(fish_n15_r_log_lm) #everything significant
plot(fish_n15_r_log_lm) #qq still not great. proceed with non-log for now....
#look at emmeans:
fish_n15_r_lm %>%
emmeans(~ seabird_level|species,
type = "response")
EMM_fish_n15 <- emmeans(fish_n15_r_lm, ~ species * seabird_level)
pairs(EMM_fish_n15, simple = "seabird_level", type = "response")
#Ab sept - mid and high are both higher than low, but not different from each other***
#A tri - low is lower than mid, and mid is marginally higher than high. low and high not different
#Lutjanus - nothing significant
#Stegastes nigricans - low is marginally lower than mid, all else not difference.
test(pairs(EMM_fish_n15, by = "species"), by = NULL, adjust = "mvt")
test(pairs(EMM_fish_n15, by = "species"), by = NULL, adjust = "none")
#similar to pairs results above
emmeans(EMM_fish_n15, list(pairwise ~ seabird_level|species), adjust = "fdr")
emmeans(fish_n15_r_lm, list(pairwise ~ seabird_level|species), adjust = "fdr")
#same results
emmeans(EMM_fish_n15, list(pairwise ~ seabird_level|species), adjust = "fdr")
emmeans(fish_n15_r_log_lm, list(pairwise ~ seabird_level|species), adjust = "fdr")
emmeans(fish_n15_r_log_lm, list(pairwise ~ seabird_level|species), adjust = "fdr", type = "response")
emmeans(fish_n15_r_log_lm, list(revpairwise ~ seabird_level|species), adjust = "fdr", type = "response")
emmeans(fish_n15_r_log_lm, list(pairwise ~ seabird_level|species), adjust = "fdr", type = "response")
