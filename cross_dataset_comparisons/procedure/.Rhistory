geom_point(data=algae.div.seabirds, inherit.aes = FALSE, aes(x=N15,
y=richness, color = distance.along.transect)) +
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.title = element_blank(),
legend.position = c(0.05, 0.1))
p.lmer.rich
p.lmer.rich <- p.lmer.rich +
ylab("Macroalgal Species Richness") +
xlab(expression(italic(delta)^15*N))+
#scale_fill_manual(values = c("10" = "#8CC7A1", "40" = "#74226C")) +
#scale_colour_manual(values = c("10" = "#8CC7A1", "40" = "#74226C")) +
scale_color_viridis_d() +
scale_fill_viridis_d()
p.lmer.rich <- p.lmer.rich +
ylab("Macroalgal Species Richness") +
xlab(expression(italic(delta)^15*N))+
#scale_fill_manual(values = c("10" = "#8CC7A1", "40" = "#74226C")) +
#scale_colour_manual(values = c("10" = "#8CC7A1", "40" = "#74226C")) +
scale_color_viridis_d() +
scale_fill_viridis_d() +
geom_point(data=algae.div.seabirds, inherit.aes = FALSE, aes(x=N15,
y=richness, color = distance.along.transect)) +
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.title = element_blank(),
legend.position = c(0.05, 0.1))
p.lmer.rich
p.lmer.rich <- p.lmer.rich +
ylab("Macroalgal Species Richness") +
xlab(expression(italic(delta)^15*N))+
#scale_fill_manual(values = c("10" = "#8CC7A1", "40" = "#74226C")) +
#scale_colour_manual(values = c("10" = "#8CC7A1", "40" = "#74226C")) +
scale_color_viridis_d() +
scale_fill_viridis_d() +
ggtitle(label = NULL) +
geom_point(data=algae.div.seabirds, inherit.aes = FALSE, aes(x=N15,
y=richness, color = distance.along.transect)) +
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.title = element_blank(),
legend.position = c(0.05, 0.1))
p.lmer.rich
ggsave("../output/seabird-algaediv/organised_output/2a_model_Richness_vs_N15.jpg", plot = p.lmer.rich, width = 7, height = 5)
algae.div.seabirds$motu
#add a restoration status column
algae.div.seabirds$reststat <- algae.div.seabirds$motu
algae.div.seabirds$reststat[algae.div.seabirds$reststat == "Aie"] <- "reference"
algae.div.seabirds$reststat[algae.div.seabirds$reststat == "Reiono"] <- "recovering"
algae.div.seabirds$reststat[algae.div.seabirds$reststat == "Rimatuu"] <- "unrestored"
#Make into a long form as a relative cover?
relcover.long <- algae.div.seabirds %>% gather(key = species.names, value = abundance, colnames(algae.div.seabirds[, 5:35]))
relcover.long$species.name.full <- relcover.long $species.names
relcover.long  <- separate(data = relcover.long , col = species.name.full, into = c("genus", "species"), sep = "\\.")
head(relcover.long)
algae.sum <- ddply(relcover.long , c("reststat", "genus"),summarise,
mean_abund = mean(abundance),
n_abund = length(abundance),
se_abund = sd(abundance)/sqrt(n_abund))
#Remove any genera that have 0 mean
algae.sum <- algae.sum[algae.sum$mean_abund != 0, ]
algal.genus.plot <- ggplot(algae.sum, aes(x = genus, y = mean_abund)) +
geom_point(position = position_dodge(width = 1), alpha = 0.5, aes(color = algae.sum$reststat)) +
geom_errorbar(position = position_dodge(width = 1), alpha = 0.5, aes(ymin = (mean_abund-se_abund), ymax = (mean_abund + se_abund), color = algae.sum$reststat)) +
ylab("Mean Percent Cover (%) \n") +
xlab("\n Macroalgal Genus") +
labs(color = 'Restoration Status', fill = 'Restoration Status') +
#scale_color_manual(labels = c("low", "mid", "high")
#,values = c("blue3", "gold", "red3")) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust=1))
algal.genus.plot
algal.genus.plot <- ggplot(algae.sum, aes(x = genus, y = mean_abund)) +
geom_point(position = position_dodge(width = 1), alpha = 0.5, aes(color = algae.sum$reststat)) +
geom_errorbar(position = position_dodge(width = 1), alpha = 0.5, aes(ymin = (mean_abund-se_abund), ymax = (mean_abund + se_abund), color = algae.sum$reststat)) +
scale_fill_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
scale_colour_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+
ylab("Mean Percent Cover (%) \n") +
xlab("\n Macroalgal Genus") +
labs(color = 'Restoration Status', fill = 'Restoration Status') +
#scale_color_manual(labels = c("low", "mid", "high")
#,values = c("blue3", "gold", "red3")) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust=1))
algal.genus.plot
ggsave(macroalgal.stack, file = "../output/seabird-algaediv/organised_output/6_macroalgae_stacked_plot.jpg", width = 7, height = 5)
ggsave(algal.genus.plot, file = "../output/seabird-algaediv/organised_output/5b_macroalgae_by_genus_reststatus.jpg", width = 7, height = 5)
#What about a stacked barplot
#Need 24 colors
library(RColorBrewer)
spec <- brewer.pal(4, "Spectral")
spec <- colorRampPalette(spec)(24)
# Plot it
macroalgal.stack <- ggplot(relcover.long , aes(fill = genus, y = abundance, x = restat))+
geom_bar(position = "fill", stat =  "identity")+
#scale_fill_brewer(palette = "Spectral")+
scale_fill_manual(values = spec) +
xlab("") +
ylab("Relative Percent Cover")+
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)
)
macroalgal.stack
# Plot it
macroalgal.stack <- ggplot(relcover.long , aes(fill = genus, y = abundance, x = reststat))+
geom_bar(position = "fill", stat =  "identity")+
#scale_fill_brewer(palette = "Spectral")+
scale_fill_manual(values = spec) +
xlab("") +
ylab("Relative Percent Cover")+
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)
)
macroalgal.stack
ggplot(relcover.long , aes(fill = genus, y = abundance, x = reststat))+
geom_bar(position = "fill", stat =  "identity")+
#scale_fill_brewer(palette = "Spectral")+
scale_fill_manual(values = spec) +
xlab("") +
ylab("Relative Percent Cover")+
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.title = ("Genus"),
axis.text.x = element_text(angle = 45, hjust = 1)
)
ggplot(relcover.long , aes(fill = genus, y = abundance, x = reststat))+
geom_bar(position = "fill", stat =  "identity")+
#scale_fill_brewer(palette = "Spectral")+
scale_fill_manual(values = spec) +
xlab("") +
ylab("Relative Percent Cover")+
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.title = element_text("Genus"),
axis.text.x = element_text(angle = 45, hjust = 1)
)
# Plot it
macroalgal.stack <- ggplot(relcover.long , aes(fill = genus, y = abundance, x = reststat))+
geom_bar(position = "fill", stat =  "identity")+
#scale_fill_brewer(palette = "Spectral")+
scale_fill_manual(values = spec) +
xlab("") +
ylab("Relative Percent Cover")+
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)
)
macroalgal.stack
ggplot(relcover.long , aes(fill = genus, y = abundance, x = reststat))+
geom_bar(position = "fill", stat =  "identity")+
#scale_fill_brewer(palette = "Spectral")+
scale_fill_manual(values = spec) +
xlab("") +
ylab("Relative Percent Cover")+
labs(fill = 'Genus') +
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)
)
# Plot it
macroalgal.stack <- ggplot(relcover.long , aes(fill = genus, y = abundance, x = reststat))+
geom_bar(position = "fill", stat =  "identity")+
#scale_fill_brewer(palette = "Spectral")+
scale_fill_manual(values = spec) +
xlab("") +
ylab("Relative Macroaglal Percent Cover")+
labs(fill = 'Genus') +
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)
)
ggsave(macroalgal.stack, file = "../output/seabird-algaediv/organised_output/6_macroalgae_stacked_plot.jpg", width = 7, height = 5)
algae.sum$genus[algae.sum$genus == "galaxaura"] <- "Galaxaura"
algal.genus.plot <- ggplot(algae.sum, aes(x = genus, y = mean_abund)) +
geom_point(position = position_dodge(width = 1), alpha = 0.5, aes(color = algae.sum$reststat)) +
geom_errorbar(position = position_dodge(width = 1), alpha = 0.5, aes(ymin = (mean_abund-se_abund), ymax = (mean_abund + se_abund), color = algae.sum$reststat)) +
scale_fill_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
scale_colour_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+
ylab("Mean Percent Cover (%) \n") +
xlab("\n Macroalgal Genus") +
labs(color = 'Restoration Status', fill = 'Restoration Status') +
#scale_color_manual(labels = c("low", "mid", "high")
#,values = c("blue3", "gold", "red3")) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust=1))
algal.genus.plot
ggsave(algal.genus.plot, file = "../output/seabird-algaediv/organised_output/5b_macroalgae_by_genus_reststatus.jpg", width = 7, height = 5)
# Plot it
macroalgal.stack <- ggplot(relcover.long , aes(fill = genus, y = abundance, x = reststat))+
geom_bar(position = "fill", stat =  "identity")+
#scale_fill_brewer(palette = "Spectral")+
scale_fill_manual(values = spec) +
xlab("") +
ylab("Relative Macroaglal Percent Cover")+
labs(fill = 'Genus') +
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)
)
macroalgal.stack
#galaxaura needs to be capitalized
relcover.long$genus[relcover.long$genus == "galaxaura"] <- "Galaxaura"
algae.sum <- ddply(relcover.long , c("reststat", "genus"),summarise,
mean_abund = mean(abundance),
n_abund = length(abundance),
se_abund = sd(abundance)/sqrt(n_abund))
#Remove any genera that have 0 mean
algae.sum <- algae.sum[algae.sum$mean_abund != 0, ]
algal.genus.plot <- ggplot(algae.sum, aes(x = genus, y = mean_abund)) +
geom_point(position = position_dodge(width = 1), alpha = 0.5, aes(color = algae.sum$reststat)) +
geom_errorbar(position = position_dodge(width = 1), alpha = 0.5, aes(ymin = (mean_abund-se_abund), ymax = (mean_abund + se_abund), color = algae.sum$reststat)) +
scale_fill_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
scale_colour_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+
ylab("Mean Percent Cover (%) \n") +
xlab("\n Macroalgal Genus") +
labs(color = 'Restoration Status', fill = 'Restoration Status') +
#scale_color_manual(labels = c("low", "mid", "high")
#,values = c("blue3", "gold", "red3")) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust=1))
algal.genus.plot
# Plot it
macroalgal.stack <- ggplot(relcover.long , aes(fill = genus, y = abundance, x = reststat))+
geom_bar(position = "fill", stat =  "identity")+
#scale_fill_brewer(palette = "Spectral")+
scale_fill_manual(values = spec) +
xlab("") +
ylab("Relative Macroaglal Percent Cover")+
labs(fill = 'Genus') +
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)
)
macroalgal.stack
ggsave(macroalgal.stack, file = "../output/seabird-algaediv/organised_output/6_macroalgae_stacked_plot.jpg", width = 7, height = 5)
algal.genus.plot <- ggplot(algae.sum, aes(x = genus, y = mean_abund)) +
geom_point(position = position_dodge(width = 1), alpha = 0.5, aes(color = algae.sum$reststat)) +
geom_errorbar(position = position_dodge(width = 1), alpha = 0.5, aes(ymin = (mean_abund-se_abund), ymax = (mean_abund + se_abund), color = algae.sum$reststat)) +
scale_fill_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
scale_colour_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+
ylab("Mean Percent Cover (%) \n") +
xlab("\n Macroalgal Genus") +
labs(color = 'Restoration Status', fill = 'Restoration Status') +
#scale_color_manual(labels = c("low", "mid", "high")
#,values = c("blue3", "gold", "red3")) +
theme_classic() +
theme(legend.position = c(0.2, 0.85)) +
theme(axis.text.x = element_text(angle = 45, hjust=1))
algal.genus.plot
algal.genus.plot <- ggplot(algae.sum, aes(x = genus, y = mean_abund)) +
geom_point(position = position_dodge(width = 1), alpha = 0.5, aes(color = algae.sum$reststat)) +
geom_errorbar(position = position_dodge(width = 1), alpha = 0.5, aes(ymin = (mean_abund-se_abund), ymax = (mean_abund + se_abund), color = algae.sum$reststat)) +
scale_fill_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
scale_colour_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+
ylab("Mean Percent Cover (%) \n") +
xlab("\n Macroalgal Genus") +
labs(color = 'Restoration Status', fill = 'Restoration Status') +
#scale_color_manual(labels = c("low", "mid", "high")
#,values = c("blue3", "gold", "red3")) +
theme_classic() +
theme(legend.position = c(0.1, 0.75)) +
theme(axis.text.x = element_text(angle = 45, hjust=1))
algal.genus.plot
algal.genus.plot <- ggplot(algae.sum, aes(x = genus, y = mean_abund)) +
geom_point(position = position_dodge(width = 1), alpha = 0.5, aes(color = algae.sum$reststat)) +
geom_errorbar(position = position_dodge(width = 1), alpha = 0.5, aes(ymin = (mean_abund-se_abund), ymax = (mean_abund + se_abund), color = algae.sum$reststat)) +
scale_fill_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
scale_colour_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+
ylab("Mean Percent Cover (%) \n") +
xlab("\n Macroalgal Genus") +
labs(color = 'Restoration Status', fill = 'Restoration Status') +
#scale_color_manual(labels = c("low", "mid", "high")
#,values = c("blue3", "gold", "red3")) +
theme_classic() +
theme(legend.position = c(0.15, 0.75)) +
theme(axis.text.x = element_text(angle = 45, hjust=1))
algal.genus.plot
ggsave(algal.genus.plot, file = "../output/seabird-algaediv/organised_output/5b_macroalgae_by_genus_reststatus.jpg", width = 7, height = 5)
algae.div.seabirds <- algae.div.seabirds %>% mutate(reststat = fct_relevel(reststat, "reference", "recovering", "unrestored"))
#Make into a long form as a relative cover?
relcover.long <- algae.div.seabirds %>% gather(key = species.names, value = abundance, colnames(algae.div.seabirds[, 5:35]))
relcover.long$species.name.full <- relcover.long $species.names
relcover.long  <- separate(data = relcover.long , col = species.name.full, into = c("genus", "species"), sep = "\\.")
head(relcover.long)
#galaxaura needs to be capitalized
relcover.long$genus[relcover.long$genus == "galaxaura"] <- "Galaxaura"
algae.sum <- ddply(relcover.long , c("reststat", "genus"),summarise,
mean_abund = mean(abundance),
n_abund = length(abundance),
se_abund = sd(abundance)/sqrt(n_abund))
#Remove any genera that have 0 mean
algae.sum <- algae.sum[algae.sum$mean_abund != 0, ]
algal.genus.plot <- ggplot(algae.sum, aes(x = genus, y = mean_abund)) +
geom_point(position = position_dodge(width = 1), alpha = 0.5, aes(color = algae.sum$reststat)) +
geom_errorbar(position = position_dodge(width = 1), alpha = 0.5, aes(ymin = (mean_abund-se_abund), ymax = (mean_abund + se_abund), color = algae.sum$reststat)) +
scale_fill_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
scale_colour_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+
ylab("Mean Percent Cover (%) \n") +
xlab("\n Macroalgal Genus") +
labs(color = 'Restoration Status', fill = 'Restoration Status') +
#scale_color_manual(labels = c("low", "mid", "high")
#,values = c("blue3", "gold", "red3")) +
theme_classic() +
theme(legend.position = c(0.15, 0.75)) +
theme(axis.text.x = element_text(angle = 45, hjust=1))
algal.genus.plot
ggsave(algal.genus.plot, file = "../output/seabird-algaediv/organised_output/5b_macroalgae_by_genus_reststatus.jpg", width = 7, height = 5)
spec <- brewer.pal(4, "Spectral")
spec <- colorRampPalette(spec)(24)
# Plot it
macroalgal.stack <- ggplot(relcover.long , aes(fill = genus, y = abundance, x = reststat))+
geom_bar(position = "fill", stat =  "identity")+
#scale_fill_brewer(palette = "Spectral")+
scale_fill_manual(values = spec) +
xlab("") +
ylab("Relative Macroaglal Percent Cover")+
labs(fill = 'Genus') +
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)
)
macroalgal.stack
ggsave(macroalgal.stack, file = "../output/seabird-algaediv/organised_output/6_macroalgae_stacked_plot.jpg", width = 7, height = 5)
corrplot::cor(genus,
nmds.scores,
use = "complete.obs",
method = "pearson")
cor(genus,
nmds.scores,
use = "complete.obs",
method = "pearson")
#Can we expand back out to genus?
#nope
#manual adding of each genus?
colnames(algae.div.seabirds)
genus <- algae.div.seabirds[,c(1:3, 59:60)]
genus$Arainvillea <- algae.div.seabirds$Avrainvillea.lacerata
genus$Boodlea <- algae.div.seabirds$Boodlea.composita
genus$Caldora <- algae.div.seabirds$Caldora.penicillata
genus$Caulerpa <- (algae.div.seabirds$Caulerpa.chemnitzia + algae.div.seabirds$Caulerpa.serrulata)
genus$Chlorodesmis <- algae.div.seabirds$Chlorodesmis.fastigiata
genus$Cladophora <- algae.div.seabirds$Cladophora.fuliginosa
genus$Dictyosphaeria <- algae.div.seabirds$Dictyosphaeria.cavernosa
genus$Dictyota <- (algae.div.seabirds$Dictyota.ceylanica + algae.div.seabirds$Dictyota.friabilis)
genus$Galaxaura <- algae.div.seabirds$galaxaura.filamentosa
genus$Gelidiella <- algae.div.seabirds$Gelidiella.acerosa
genus$Halimeda <- (algae.div.seabirds$Halimeda.discoidea + algae.div.seabirds$Halimeda.distorta +
algae.div.seabirds$Halimeda.heteromorpha + algae.div.seabirds$Halimeda.minima +
algae.div.seabirds$Halimeda.opuntia)
genus$Hydroclathrus <- algae.div.seabirds$Hydroclathrus.clathratus
genus$Hydrocoleum <- (algae.div.seabirds$Hydrocoleum.coccineum + algae.div.seabirds$Hydrocoleum.spp)
genus$Hypena <- algae.div.seabirds$Hypnea.spinella
genus$Jania <- algae.div.seabirds$Jania.articulata
genus$Lobophora <- algae.div.seabirds$Lobophora.spp
genus$Lyngbya <- algae.div.seabirds$Lyngbya.sordida
genus$Neomeris <- algae.div.seabirds$Neomeris.vanbosseae
genus$Oscillatoria <- algae.div.seabirds$Oscilllatoria.spp
genus$Pseudanabaena <- algae.div.seabirds$Pseudanabaena.lonchoides
genus$Pterocladiella <- algae.div.seabirds$Pterocladiella.caerulescens
genus$Schizothrix <- algae.div.seabirds$Schizothrix.minuta
genus$Symploca <- algae.div.seabirds$Symploca.hydnoides
genus$Turbinaria <- algae.div.seabirds$Turbinaria.ornata
colnames(genus)
print(colnames(genus[,c(6:24, 26:29)]))
columns <- colnames(genus[,c(6:24, 26:29)])
#Loop
dat <- genus
models <- list()
for (i in columns) {
f <- formula(paste(i, "~ N15*distance.along.transect + exposure + (1|site.name)"))
models[[i]] <- lmer(f, data=dat, na.action = na.omit)
print(Anova(models[[i]]))
}
#For some reason, pseudanabaena is not able to make a VCV matrix
cor(genus,
nmds.scores,
use = "complete.obs",
method = "pearson")
genus
cor(genus[, c(6:29)],
nmds.scores,
use = "complete.obs",
method = "pearson")
nmds.scores
cor(genus[, c(6:29)],
nmds.scores[, c(1:3)],
use = "complete.obs",
method = "pearson")
cor.genus <- cor(genus[, c(6:29)],
nmds.scores[, c(1:3)],
use = "complete.obs",
method = "pearson")
View(cor.genus)
corrplot(cor.genus)
write.csv(cor.genus, "../output/seabird-algaediv/organised_output/nmds_axis_correlation_by_genus.csv", header  = T)
write.csv(cor.genus, "../output/seabird-algaediv/organised_output/nmds_axis_correlation_by_genus.csv")
p.corr.nmds <- corrplot(cor.genus)
ggsave("../output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus.jpg", plot = p.corr.nmds, width = 7, height = 5)
p.corr.nmds <- corrplot(cor.genus)
ggsave("../output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus.jpg", plot = p.corr.nmds, width = 7, height = 5)
pdf(file ="/output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus.pdf")
pdf(file ="../output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus.pdf")
p.corr.nmds <- corrplot(cor.genus)
dev.off()
cor.genus <- cor(genus[, c(6:29)],
nmds.scores[, c(1:3)],
use = "complete.obs",
method = "spearman")
View(cor.genus)
write.csv(cor.genus, "../output/seabird-algaediv/organised_output/nmds_axis_correlation_by_genus_spearman.csv")
pdf(file ="../output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus_spearman.pdf")
p.corr.nmds <- corrplot(cor.genus)
dev.off()
p.corr.nmds <- corrplot(cor.genus)
pdf(file ="../output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus_spearman.pdf")
corrplot(cor.genus)
dev.off()
corrplot(cor.genus)
ggsave("../output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus.jpg", plot = last_plot(), width = 7, height = 5)
corrplot(cor.genus)
pdf(file = "../output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus_spearman.pdf")
corrplot(cor.genus, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "r", cl.ratio = .5)
dev.off()
cor.genus <- cor(genus[, c(6:29)],
nmds.scores[, c(1:2)],
use = "complete.obs",
method = "spearman")
View(cor.genus)
write.csv(cor.genus, "../output/seabird-algaediv/organised_output/nmds_axis_correlation_by_genus_spearman.csv")
corrplot(cor.genus)
pdf(file = "../output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus_spearman.pdf")
corrplot(cor.genus, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "r", cl.ratio = .5)
dev.off()
cor.test(cor.genus)
cor.mtest(genus[, c(6:29)],
nmds.scores[, c(1:2)],
use = "complete.obs",
method = "spearman")
corr.test( genus[, c(6:29)],
nmds.scores[, c(1:2)],
use = "complete.obs",
method = "spearman")
psych::corr.test( genus[, c(6:29)],
nmds.scores[, c(1:2)],
use = "complete.obs",
method = "spearman")
cor.test( genus[, c(6:29)],
nmds.scores[, c(1:2)],
use = "complete.obs",
method = "spearman")
genus[, c(6:29)]
[, c(1:2)]
nmds.scores[, c(1:2)]
cor.test(genus[, c(6:29)],
nmds.scores[, c(1:2)],
use = "complete.obs",
method = "spearman")
?cor.test()
?cor.mtest()
#what about combinng into a single matrix
nmds.gen <- merge(genus, nmds.scores)
nmds.gen
cor.mtest(nmds.gen[, c(6:31)],
use = "complete.obs",
method = "spearman")
cor.mtest(nmds.gen[, c(6:31)])
View(cor.mtest(nmds.gen[, c(6:31)]))
cor(nmds.gen, use = "pairwise.complete.obs", method  = "spearman")
cor(nmds.gen, use = "complete.obs", method  = "spearman")
cor(nmds.gen[,c(6:31)], use = "complete.obs", method  = "spearman")
cor.genus <- cor(genus[, c(6:29)],
nmds.scores[, c(1:2)],
use = "complete.obs",
method = "spearman")
View(cor.genus)
write.csv(cor.genus, "../output/seabird-algaediv/organised_output/nmds_axis_correlation_by_genus_spearman.csv")
cor.mtest(nmds.gen[, c(6:31)])
cor.test(6:30, nmds.gen$NMDS1)
cor.test(nmds.gen[, c(6:29)), nmds.gen$NMDS1)
cor.test(nmds.gen[, c(6:29], nmds.gen$NMDS1)
cor.test(nmds.gen[, c(6:29)], nmds.gen$NMDS1)
nmds.gen[, c(6:29)]
