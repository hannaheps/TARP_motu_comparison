type = "response")
emmeans(macro_vid.lmm.beta, list(pairwise ~ seabird_level), type = "response", adjust = "fdr")
##response plot, beta----
plot_data_macro_vid_beta<-emmip(macro_vid.lmm.beta, ~ seabird_level,
type = "response", CIs = TRUE, plotit=FALSE)
plot_data_hc_vid_beta
macro_vid_response_plot_beta<-
ggplot(data = plot_data_macro_vid_beta, aes(x = seabird_level, y = yvar*100, color = seabird_level, fill = seabird_level))+
#  geom_point(pch = 4,  position = position_dodge(.3))+
geom_pointrange(aes(ymin = LCL*100, ymax = UCL*100), alpha = .3, linewidth = 2, size = 0,  position = position_dodge(.1)) + #,  position = position_dodge(.3)
# geom_point(data = fishn15.seabirds.cond.r,
#  aes(y = n15, x = seabird_level), size = 2.5, alpha = .5,  position = position_dodge(.3))+
geom_line(alpha = .5 ,  position = position_dodge(.1))+
#scale_fill_manual(values = my_colors)+
# scale_color_manual(values = my_colors) +
ylab("% hard coral cover")+
#scale_y_continuous(labels = scales::label_percent(accuracy = .1, scale = 1),  limits = c(0, 100), expand = expansion(0, 0))+
xlab("seabird biomass level")+
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.position = "none" )
macro_vid_response_plot_beta
plot_data_macro_vid_beta
plot_data_hc_vid_beta
plot_data_hc_vid_beta<-
plot_data_macro_vid_beta%>%
mutate(group = "algae")
plot_data_macro_vid_beta<-
plot_data_macro_vid_beta%>%
mutate(group = "algae")
plot_data_hc_vid_beta<-
plot_data_macro_vid_beta%>%
mutate(group = "hard coral")
plot_data_vid_beta<-
rbind(plot_data_hc_vid_beta, plot_data_macro_vid_beta)
plot_data_vid_beta
#combine algae and coral plots:
ggplot(data = plot_data_vid_beta, aes(x = seabird_level, y = yvar*100, color = group, fill = group))+
geom_pointrange(aes(ymin = LCL*100, ymax = UCL*100), alpha = .3, linewidth = 2, size = 0,  position = position_dodge(.1)) +
geom_line(alpha = .5 ,  position = position_dodge(.1))+
ylab("% hard coral cover")+
#scale_y_continuous(labels = scales::label_percent(accuracy = .1, scale = 1),  limits = c(0, 100), expand = expansion(0, 0))+
xlab("seabird biomass level")+
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank())
plot_data_vid_beta
##response plot, beta----
plot_data_hc_vid_beta<-emmip(hard_coral_vid.lmm.beta, ~ seabird_level,
type = "response", CIs = TRUE, plotit=FALSE)
plot_data_hc_vid_beta<-
plot_data_hc_vid_beta%>%
mutate(group = "hard coral")
plot_data_macro_vid_beta<-
plot_data_macro_vid_beta%>%
mutate(group = "algae")
plot_data_vid_beta<-
rbind(plot_data_hc_vid_beta, plot_data_macro_vid_beta)
plot_data_vid_beta
#combine algae and coral plots:
ggplot(data = plot_data_vid_beta, aes(x = seabird_level, y = yvar*100, color = group, fill = group))+
geom_pointrange(aes(ymin = LCL*100, ymax = UCL*100), alpha = .3, linewidth = 2, size = 0,  position = position_dodge(.1)) +
geom_line(alpha = .5 ,  position = position_dodge(.1))+
ylab("% hard coral cover")+
xlab("seabird biomass level")+
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank())
ggplot(data = plot_data_vid_beta, aes(x = group, y = yvar*100, color = seabird_level, fill = seabird_level))+
geom_pointrange(aes(ymin = LCL*100, ymax = UCL*100), alpha = .3, linewidth = 2, size = 0,  position = position_dodge(.1)) +
geom_line(alpha = .5 ,  position = position_dodge(.1))+
ylab("% cover")+
xlab("seabird biomass level")+
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank())
benthic.situ.seabirds.levels.algae
###repeat for in situ:------------
benthic.situ.seabirds.levels.algae.beta<-
benthic.situ.seabirds.levels.algae %>%
mutate_at(13:18, div100)%>%
mutate_at(13:18, transform01)
benthic.situ.seabirds.levels.algae.beta
##HARD CORAL-----
hard_coral_situ.lmm.beta<-glmmTMB(hard_coral_percent_cover~seabird_level+wind.exposure + (1|site.name), family=beta_family(), data = benthic.situ.seabirds.levels.algae.beta)
summary(hard_coral_situ.lmm.beta)
benthic.situ.seabirds.levels.algae.beta
##HARD CORAL-----
hard_coral_situ.lmm.beta<-glmmTMB(coral_percent_cover~seabird_level+wind.exposure + (1|site.name), family=beta_family(), data = benthic.situ.seabirds.levels.algae.beta)
summary(hard_coral_situ.lmm.beta)
Anova(hard_coral_situ.lmm.beta)
plot(resid(hard_coral_situ.lmm.beta))
qqnorm(resid(hard_coral_situ.lmm.beta))
#look at emmeans:
hard_coral_situ.lmm.beta %>%
emmeans(~ seabird_level,
type = "response")
emmeans(hard_coral_situ.lmm.beta, list(pairwise ~ seabird_level), type = "response", adjust = "fdr")
##response plot, beta----
plot_data_hc_situ_beta<-emmip(hard_coral_situ.lmm.beta, ~ seabird_level,
type = "response", CIs = TRUE, plotit=FALSE)
plot_data_hc_situ_beta
hc_situ_response_plot_beta<-
ggplot(data = plot_data_hc_situ_beta, aes(x = seabird_level, y = yvar*100, color = seabird_level, fill = seabird_level))+
#  geom_point(pch = 4,  position = position_dodge(.3))+
geom_pointrange(aes(ymin = LCL*100, ymax = UCL*100), alpha = .3, linewidth = 2, size = 0,  position = position_dodge(.1)) + #,  position = position_dodge(.3)
# geom_point(data = fishn15.seabirds.cond.r,
#  aes(y = n15, x = seabird_level), size = 2.5, alpha = .5,  position = position_dodge(.3))+
geom_line(alpha = .5 ,  position = position_dodge(.1))+
#scale_fill_manual(values = my_colors)+
# scale_color_manual(values = my_colors) +
ylab("% hard coral cover")+
#scale_y_continuous(labels = scales::label_percent(accuracy = .1, scale = 1),  limits = c(0, 100), expand = expansion(0, 0))+
xlab("seabird biomass level")+
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.position = "none" )
hc_situ_response_plot_beta
benthic.situ.seabirds.levels.algae.beta
##MACROALGAE----
macro_situ.lmm.beta<-glmmTMB(macroalgae_percent_cover~seabird_level+wind.exposure + (1|site.name), family=beta_family(), data = benthic.situ.seabirds.levels.algae.beta)
##MACROALGAE----
macro_situ.lmm.beta<-glmmTMB(macroalgae_percent_cover~seabird_level+wind.exposure + (1|site.name), family=beta_family(), data = benthic.situ.seabirds.levels.algae.beta)
summary(macro_situ.lmm.beta)
##MACROALGAE----
macro_situ.lmm.beta<-glmmTMB(macroalgae_percent_cover~seabird_level+wind.exposure + (1|site.name), family=beta_family(), data = benthic.situ.seabirds.levels.algae.beta)
summary(macro_situ.lmm.beta)
Anova(macro_situ.lmm.beta)
plot(resid(macro_situ.lmm.beta))
qqnorm(resid(macro_situ.lmm.beta))
#look at emmeans:
macro_situ.lmm.beta %>%
emmeans(~ seabird_level,
type = "response")
emmeans(macro_situ.lmm.beta, list(pairwise ~ seabird_level), type = "response", adjust = "fdr")
##response plot, beta----
plot_data_macro_situ_beta<-emmip(macro_situ.lmm.beta, ~ seabird_level,
type = "response", CIs = TRUE, plotit=FALSE)
plot_data_macro_situ_beta
macro_situ_response_plot_beta<-
ggplot(data = plot_data_macro_situ_beta, aes(x = seabird_level, y = yvar*100, color = seabird_level, fill = seabird_level))+
#  geom_point(pch = 4,  position = position_dodge(.3))+
geom_pointrange(aes(ymin = LCL*100, ymax = UCL*100), alpha = .3, linewidth = 2, size = 0,  position = position_dodge(.1)) + #,  position = position_dodge(.3)
# geom_point(data = fishn15.seabirds.cond.r,
#  aes(y = n15, x = seabird_level), size = 2.5, alpha = .5,  position = position_dodge(.3))+
geom_line(alpha = .5 ,  position = position_dodge(.1))+
#scale_fill_manual(values = my_colors)+
# scale_color_manual(values = my_colors) +
ylab("% hard coral cover")+
#scale_y_continuous(labels = scales::label_percent(accuracy = .1, scale = 1),  limits = c(0, 100), expand = expansion(0, 0))+
xlab("seabird biomass level")+
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.position = "none" )
macro_situ_response_plot_beta
plot_data_hc_situ_beta<-
plot_data_hc_situ_beta%>%
mutate(group = "hard coral")
plot_data_macro_situ_beta<-
plot_data_macro_situ_beta%>%
mutate(group = "algae")
plot_data_situ_beta<-
rbind(plot_data_hc_situ_beta, plot_data_macro_situ_beta)
plot_data_situ_beta
##combine all into one plot:
plot_data_situ_beta<-
plot_data_situ_beta%>%
mutate(method = "in situ")
plot_data_vid_beta<-
plot_data_vid_beta%>%
mutate(method = "video")
plot_data_beta_all<-
rbind(plot_data_situ_beta, plot_data_vid_beta)
plot_data_beta_all
plot_beta_all_est<-
ggplot(data = plot_data_beta_all, aes(x = seabird_level, y = yvar*100, color = method, fill = method))+
geom_pointrange(aes(ymin = LCL*100, ymax = UCL*100), alpha = .3, linewidth = 2, size = 0,  position = position_dodge(.1)) +
geom_line(alpha = .5 ,  position = position_dodge(.1))+
ylab("% cover")+
xlab("seabird biomass level")+
facet_wrap(~group)+
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank())
plot_beta_all_est
Anova(hard_coral_situ.lmm.beta)
emmeans(hard_coral_situ.lmm.beta, list(pairwise ~ seabird_level), type = "response", adjust = "fdr")
Anova(hard_coral_vid.lmm.beta)
Anova(macro_vid.lmm.beta)
Anova(hard_coral_situ.lmm.beta)
library(tidyverse)
library(lme4)
library(car)
library(jtools)
library(emmeans)
library(corrplot)
library(vegan)
library(cowplot)
seabirds <- read.csv("../output/n15_seabirds_combined_no_iti.csv", strip.white = T, header = T)
load("../../fish_benthic_surveys/output/data/fish_community_data.Rdata")
fish_bio_dat<-nmds_fish_diet_log_bio_site_scores
fish_bio_dat
#make combined site name column in fish data
fish_bio_dat2<-
fish_bio_dat%>%
mutate(protection = if_else(wind.exposure == "leeward", "Protected", "Exposed"))%>%
relocate(protection, .before = wind.exposure)%>%
mutate(motu = str_to_title(motu))%>%
unite("site.name", c(motu, protection), sep = "_", remove = FALSE)
fish_bio_dat2
fish.bio.seabirds<-left_join(fish_bio_dat2,
select(seabirds, c("site.name", "breeding_biomass_kgha_side")),
by = "site.name")%>%
mutate(site.name = as.factor(site.name))
fish.bio.seabirds
#load data-----
tet_trans_meta<-read.csv("../../metadata/fish_benthic_focal_transect_metadata.csv", stringsAsFactors = TRUE)
str(tet_trans_meta)
#make site name to do easy merge:----
tet_trans_meta2<-
tet_trans_meta%>%
rename_all(str_to_lower)%>%
mutate(protection = if_else(exposure == "Leeward", "Protected", "Exposed"))%>%
relocate(protection, .before = exposure)%>%
mutate(motu = str_to_title(motu))%>%
unite("site.name", c(motu, protection), sep = "_", remove = FALSE)
tet_trans_meta2
fish.bio.seabirds.trans<-right_join(select(tet_trans_meta2, c("site.name", "transect", "start_distance_to_shore_m",
"end_distance_to_shore_m", "depth_min_m", "depth_max_m", "structural_complexity_0to5",
"transect.location")),
fish.bio.seabirds,
by = c("site.name", "transect"))%>%
relocate(breeding_biomass_kgha_side, .after = rat.eradication.status) %>%
mutate(transect.in.out = case_when(grepl(pattern = "off", x = transect.location) ~ "offshore",
grepl(pattern = "in", x = transect.location) ~ "inshore"))%>%
mutate(transect.in.out = as.factor(transect.in.out))%>%
relocate(transect.in.out, .after = transect.location)
fish.bio.seabirds.trans
###add transect data to fish density----
#density by feeding group/diet:
fish_fg_dens_dat<-
nmds_fish_diet_log_site_scores%>%
select(c(motu, site.name, wind.exposure, transect, Herb, InvMob, Omnivr, Plktiv, FisCep, InvSes))%>%
rename_with(~paste0(.,"_density"), Herb:InvSes)%>%
mutate(protection = if_else(wind.exposure == "leeward", "Protected", "Exposed"))%>%
relocate(protection, .before = wind.exposure)%>%
mutate(motu = str_to_title(motu))%>%
unite("site.name", c(motu, protection), sep = "_", remove = FALSE)
fish_fg_dens_dat
fish.dens.seabirds<-left_join(fish_fg_dens_dat,
select(seabirds, c("site.name", "breeding_biomass_kgha_side")),
by = "site.name")%>%
mutate(site.name = as.factor(site.name))
fish.dens.seabirds
#and combine with transect metadata
fish.dens.seabirds.trans<-right_join(select(tet_trans_meta2, c("site.name", "transect", "start_distance_to_shore_m",
"end_distance_to_shore_m", "depth_min_m", "depth_max_m", "structural_complexity_0to5",
"transect.location")),
fish.dens.seabirds,
by = c("site.name", "transect"))%>%
relocate(breeding_biomass_kgha_side, .after = wind.exposure) %>%
mutate(transect.in.out = case_when(grepl(pattern = "off", x = transect.location) ~ "offshore",
grepl(pattern = "in", x = transect.location) ~ "inshore"))%>%
mutate(transect.in.out = as.factor(transect.in.out))%>%
relocate(transect.in.out, .after = transect.location)
fish.dens.seabirds.trans
tet_fish_dens_div_comm_dat
tet_fish_div_comm_tl_dat
nmds_fish_diet_log_site_scores
nmds_fish_diet_log_bio_site_scores
#total density, and diversity stats based on density:
fish_dens_div_dat<-
tet_fish_dens_div_comm_dat%>%
select(c(motu, site.name, wind.exposure, transect, shannon, evenness, sum_dens, PD, SR))%>%
mutate(protection = if_else(wind.exposure == "leeward", "Protected", "Exposed"))%>%
relocate(protection, .before = wind.exposure)%>%
mutate(motu = str_to_title(motu))%>%
unite("site.name", c(motu, protection), sep = "_", remove = FALSE)
#relative biomass by trophic level:
fish_tl_bio_dat<-
tet_fish_div_comm_tl_dat%>%
select(c(motu, site.name, wind.exposure, transect, rel_bio_TL1, rel_bio_TL2, rel_bio_TL3, rel_bio_TL4, rel_bio_TL5))%>%
mutate(protection = if_else(wind.exposure == "leeward", "Protected", "Exposed"))%>%
relocate(protection, .before = wind.exposure)%>%
mutate(motu = str_to_title(motu))%>%
unite("site.name", c(motu, protection), sep = "_", remove = FALSE)
#biomass by feeding group/diet, and keep in metadata from above:
fish_fg_bio_dat<-
fish.bio.seabirds.trans%>%
select(c(motu, site.name,wind.exposure, transect, start_distance_to_shore_m, end_distance_to_shore_m,
depth_min_m, depth_max_m, structural_complexity_0to5, transect.in.out, breeding_biomass_kgha_side,
Herb, InvMob, Omnivr, Plktiv, FisCep, InvSes))%>%
rename_with(~paste0(.,"_biomass"), Herb:InvSes)%>%
rowwise%>%
mutate(sum_fish_biomass = sum(c_across(Herb_biomass:InvSes_biomass)))%>%
ungroup
fish_fg_bio_dat
#now combine----
fish_comb_dat_1<- full_join(fish_dens_div_dat, fish_tl_bio_dat, by = c("motu", "site.name", "wind.exposure", "protection", "transect"))
fish_comb_dat_1
fish_comb_dat_2<- full_join(fish_comb_dat_1, fish_fg_dens_dat, by = c("motu", "site.name", "wind.exposure", "protection", "transect"))
fish_comb_dat_2
fish_comb_dat<- full_join(fish_fg_bio_dat, select(fish_comb_dat_2,-protection), by = c("motu", "site.name", "wind.exposure",  "transect"))
fish_comb_dat
#to seabird biomass----
#seabird levels----
fish_comb_dat_levels<-
fish_comb_dat%>%
mutate(seabird_level = case_when(breeding_biomass_kgha_side<10 ~"low",
breeding_biomass_kgha_side>10&breeding_biomass_kgha_side <200 ~"mid",
breeding_biomass_kgha_side>200 ~"high"))%>%
mutate(seabird_level = as.factor(seabird_level))%>%
mutate(seabird_level = fct_relevel(seabird_level, "low", "mid", "high"))%>%
relocate(seabird_level, .before = breeding_biomass_kgha_side)
fish_comb_dat_levels
#algae n15----
algae_n15<-read.csv("../output/n15_seabirds_combined_no_iti.csv")
algae_n15
fish_comb_dat_levels_algae<-left_join(fish_comb_dat_levels,
select(algae_n15, c("site.name", "N.15_at_10m",  "N.15_at_20m", "N.15_at_30m", "N.15_at_40m")),
by = "site.name")
fish_comb_dat_levels_algae
#to seabird density-----
fish.dens.seabirds.trans
fish_fg_dens_dat_levels<-
fish.dens.seabirds.trans%>%
mutate(seabird_level = case_when(breeding_biomass_kgha_side<10 ~"low",
breeding_biomass_kgha_side>10&breeding_biomass_kgha_side <200 ~"mid",
breeding_biomass_kgha_side>200 ~"high"))%>%
mutate(seabird_level = as.factor(seabird_level))%>%
mutate(seabird_level = fct_relevel(seabird_level, "low", "mid", "high"))%>%
relocate(seabird_level, .before = breeding_biomass_kgha_side)
fish_fg_dens_dat_levels
fish_fg_dens_dat_levels_algae<-left_join(fish_fg_dens_dat_levels,
select(algae_n15, c("site.name", "N.15_at_10m",  "N.15_at_20m", "N.15_at_30m", "N.15_at_40m")),
by = "site.name")
fish_fg_dens_dat_levels_algae
#create species matrix, and log
fish.dens.seabirds.trans_sp<-
fish_fg_dens_dat_levels_algae%>%
ungroup()%>%
select(Herb_density:InvSes_density)
fish.dens.seabirds.trans_sp
fish.dens.seabirds.trans_sp_log<-
log(fish.dens.seabirds.trans_sp+1)
#run NMDS
nmds_fish_log_dens<-metaMDS(fish.dens.seabirds.trans_sp_log, distance = "bray", trymax=200, k=2, autotransform = FALSE)
nmds_fish_log_dens
#2 axes stress = 0.09476996, so all good
plot(nmds_fish_log_dens)
scores(nmds_fish_log_dens, display="species")
#look at plot and centroids, for now just motu and exposure (so sitename). will need to add explanatory variables
plot(nmds_fish_log_dens)
ord.fit.level<-envfit(nmds_fish_log_dens~seabird_level+protection + structural_complexity_0to5, data = fish_fg_dens_dat_levels_algae, na.rm=TRUE)
ord.fit.level #looks like nothing sig
ord.fit.algae<-envfit(nmds_fish_log_dens~N.15_at_30m+protection + structural_complexity_0to5, data = fish_fg_dens_dat_levels_algae, na.rm=TRUE)
ord.fit.algae #Algae n15 is significant****
#rotate by algae n15 so can more easily interpret----
nmds_fish_log_dens.rotate<-MDSrotate(nmds_fish_log_dens, fish_fg_dens_dat_levels_algae$N.15_at_30m)
nmds_fish_log_dens.rotate
##extract site/transect scores (non-rotated)----
fish_spp.sc <- as.data.frame(scores(nmds_fish_log_dens, "species")) %>% #Using the scores function from vegan to extract the species scores and convert to a data.frame
rownames_to_column(var="Species") %>% # create a column of species, from the rownames of species.scores
mutate(Species = str_remove(Species, '_density'))%>%
mutate(species2 = c("Herbivore", "Mobile Invertebrate Feeder", "Omnivore", "Planktivore", "Piscivore", "Sessile Invertebrate Feeder"))
fish_spp.sc
fish_site.sc <- scores(nmds_fish_log_dens, display = "sites", shrink = FALSE)
fish_site.sc
#merge site.sc with site and transect
nmds_fish_site_scores<-
bind_cols(fish_fg_dens_dat_levels_algae$site.name, fish_fg_dens_dat_levels_algae$transect,
as_tibble(fish_site.sc))%>%
rename('site.name' = '...1', 'transect' = '...2')
nmds_fish_site_scores
#combine with other metadata:
fish.seabirds.levels.algae.w.nmds.norotate<-
left_join(fish_fg_dens_dat_levels_algae,
nmds_fish_site_scores,
by = c("site.name", "transect"))
fish.seabirds.levels.algae.w.nmds.norotate
##extract site/transect scores (rotated)----
fish_spp.sc.rotate <- as.data.frame(scores(nmds_fish_log_dens.rotate, "species")) %>% #Using the scores function from vegan to extract the species scores and convert
rownames_to_column(var="Species") %>% # create a column of species, from the rownames of species.scores
mutate(Species = str_remove(Species, '_density'))%>%
mutate(species2 = c("Herbivore", "Mobile Invertebrate Feeder", "Omnivore", "Planktivore", "Piscivore", "Sessile Invertebrate Feeder"))
fish_spp.sc.rotate
fish_site.sc.rotate <- scores(nmds_fish_log_dens.rotate, display = "sites", shrink = FALSE)
fish_site.sc.rotate
#merge site.sc with site and transect
nmds_fish_site_scores_rotate<-
bind_cols(fish_fg_dens_dat_levels_algae$site.name, fish_fg_dens_dat_levels_algae$transect,
as_tibble(fish_site.sc.rotate))%>%
rename('site.name' = '...1', 'transect' = '...2')
nmds_fish_site_scores_rotate
#combine with other metadata:
fish.seabirds.levels.algae.w.nmds<-
left_join(fish.seabirds.levels.algae.w.nmds.norotate,
nmds_fish_site_scores_rotate,
by = c("site.name", "transect")) %>%
rename("NMDS1" = "NMDS1.x",
"NMDS2" = "NMDS2.x",
"NMDS1.rotate" = "NMDS1.y",
"NMDS2.rotate" = "NMDS2.y")
fish.seabirds.levels.algae.w.nmds
#NMDS plot----
##non-rotated:----
#get hull data:
site.low <- fish.seabirds.levels.algae.w.nmds[fish.seabirds.levels.algae.w.nmds$seabird_level == "low", ][chull(fish.seabirds.levels.algae.w.nmds[fish.seabirds.levels.algae.w.nmds$seabird_level ==
"low", c("NMDS1", "NMDS2")]), ]
site.mid <- fish.seabirds.levels.algae.w.nmds[fish.seabirds.levels.algae.w.nmds$seabird_level == "mid", ][chull(fish.seabirds.levels.algae.w.nmds[fish.seabirds.levels.algae.w.nmds$seabird_level ==
"mid", c("NMDS1", "NMDS2")]), ]
site.high <- fish.seabirds.levels.algae.w.nmds[fish.seabirds.levels.algae.w.nmds$seabird_level == "high", ][chull(fish.seabirds.levels.algae.w.nmds[fish.seabirds.levels.algae.w.nmds$seabird_level ==
"high", c("NMDS1", "NMDS2")]), ]
fish.hull.data <- rbind(site.low, site.mid, site.high)  #combine
fish.hull.data
ggplot() +
geom_text(data=fish_spp.sc,aes(x=NMDS1,y=NMDS2,label=Species), alpha = .2) +  # add the species labels -
geom_point(data=fish.seabirds.levels.algae.w.nmds,aes(x=NMDS1,y=NMDS2,colour=seabird_level, fill = seabird_level, pch = seabird_level), stat="identity", size=5, alpha = .9) +
geom_polygon(data=fish.hull.data,aes(x=NMDS1,y=NMDS2,fill=seabird_level,group=seabird_level),alpha=0.30) + # add the convex hulls
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(), #remove gray boxes
text = element_text(size=20))
#legend.title = element_blank()) #remove legend title
#legend.box.background = element_rect(colour = "black", fill='white', linetype='solid', size=1),
# legend.justification=c(1,.9), legend.position=c(1,.9))  #  fix legend
##get arrows:
ord.fit.fish<-envfit(nmds_fish_log_dens ~ N.15_at_30m +protection + structural_complexity_0to5, data = fish.seabirds.levels.algae.w.nmds, na.rm=TRUE)
ord.fit.fish #looks like n15 is significant
sb.scrs.fish <- as.data.frame(scores(ord.fit.fish, display = "vectors"))
sb.scrs.fish <- cbind(sb.scrs.fish, variable = rownames(sb.scrs.fish))
sb.scrs.fish<-
sb.scrs.fish%>%
mutate(variable2 = c("algae n15", "structural complexity"))
fish_dens_log_nmds_plot<-
ggplot() +
geom_text(data=fish_spp.sc,aes(x=NMDS1,y=NMDS2,label=Species), alpha = .2) +  # add the species labels -
geom_point(data=fish.seabirds.levels.algae.w.nmds,aes(x=NMDS1,y=NMDS2,colour=seabird_level, fill = seabird_level, pch = seabird_level), stat="identity", size=5, alpha = .9) +
geom_polygon(data=fish.hull.data,aes(x=NMDS1,y=NMDS2,fill=seabird_level,group=seabird_level),alpha=0.30) + # add the convex hulls
coord_fixed() + ## need aspect ratio of 1!
geom_segment(data = sb.scrs.fish,
aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "black") +
geom_text(data = sb.scrs.fish, aes(x = NMDS1, y = NMDS2, label = sb.scrs.fish$variable2),
size = 3, vjust = 2)+
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(), #remove gray boxes
text = element_text(size=20))
#legend.title = element_blank()) #remove legend title
#legend.box.background = element_rect(colour = "black", fill='white', linetype='solid', size=1),
# legend.justification=c(1,.9), legend.position=c(1,.9))  #  fix legend
fish_dens_log_nmds_plot
##save plot
ggsave(fish_dens_log_nmds_plot, file = "../output/seabird-fish/fish_log_dens_fg_nmds_plot.jpg",
width = 7, height = 5)
##rotated plot-----
#get hull data:
site.low.rotate <- fish.seabirds.levels.algae.w.nmds[fish.seabirds.levels.algae.w.nmds$seabird_level == "low", ][chull(fish.seabirds.levels.algae.w.nmds[fish.seabirds.levels.algae.w.nmds$seabird_level ==
"low", c("NMDS1.rotate", "NMDS2.rotate")]), ]
site.mid.rotate  <- fish.seabirds.levels.algae.w.nmds[fish.seabirds.levels.algae.w.nmds$seabird_level == "mid", ][chull(fish.seabirds.levels.algae.w.nmds[fish.seabirds.levels.algae.w.nmds$seabird_level ==
"mid", c("NMDS1.rotate", "NMDS2.rotate")]), ]
site.high.rotate  <- fish.seabirds.levels.algae.w.nmds[fish.seabirds.levels.algae.w.nmds$seabird_level == "high", ][chull(fish.seabirds.levels.algae.w.nmds[fish.seabirds.levels.algae.w.nmds$seabird_level ==
"high", c("NMDS1.rotate", "NMDS2.rotate")]), ]
fish.hull.data.rotate  <- rbind(site.low.rotate , site.mid.rotate , site.high.rotate )  #combine
fish.hull.data.rotate
##get arrows:
ord.fit.fish.rotate<-envfit(nmds_fish_log_dens.rotate  ~ N.15_at_30m +protection + structural_complexity_0to5, data = fish.seabirds.levels.algae.w.nmds, na.rm=TRUE)
ord.fit.fish.rotate #looks like n15 is significant
sb.scrs.fish.rotate  <- as.data.frame(scores(ord.fit.fish.rotate , display = "vectors"))
sb.scrs.fish.rotate  <- cbind(sb.scrs.fish.rotate , variable = rownames(sb.scrs.fish.rotate ))
sb.scrs.fish.rotate <-
sb.scrs.fish.rotate %>%
mutate(variable2 = c("algae n15", "structural complexity"))
fish_dens_log_nmds_plot_rotate<-
ggplot() +
geom_text(data=fish_spp.sc.rotate,aes(x=NMDS1,y=NMDS2 ,label=species2), alpha = .2) +  # add the species labels -
geom_point(data=fish.seabirds.levels.algae.w.nmds,aes(x=NMDS1.rotate,y=NMDS2.rotate,colour=seabird_level, fill = seabird_level, pch = seabird_level), stat="identity", size=5, alpha = .9) +
geom_polygon(data=fish.hull.data.rotate,aes(x=NMDS1.rotate, y=NMDS2.rotate ,fill=seabird_level,group=seabird_level),alpha=0.30) + # add the convex hulls
#coord_fixed() + ## need aspect ratio of 1!
geom_segment(data = sb.scrs.fish.rotate,
aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "black") +
geom_text(data = sb.scrs.fish.rotate , aes(x = NMDS1, y = NMDS2, label = sb.scrs.fish.rotate$variable2),
size = 3, hjust = "inward", vjust = 2)+
labs(colour = "Seabird biomass", fill = "Seabird biomass", shape = "Seabird biomass")+
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank())
#legend.title = element_blank()) #remove legend title
#legend.box.background = element_rect(colour = "black", fill='white', linetype='solid', size=1),
# legend.justification=c(1,.9), legend.position=c(1,.9))  #  fix legend
fish_dens_log_nmds_plot_rotate
##save plot
ggsave(fish_dens_log_nmds_plot_rotate, file = "../output/seabird-fish/fish_dens_log_nmds_plot_rotate.jpg",
width = 7, height = 5)
#run NMDS (data frame created in previous chunk)
nmds_fish_dens_autoT<-metaMDS(fish.dens.seabirds.trans_sp, distance = "bray", trymax=200, k=2, autotransform = TRUE)
nmds_fish_dens_autoT
