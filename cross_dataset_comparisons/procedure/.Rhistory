ggplot() +
#geom_text(data=nmds.scores,aes(x=NMDS1,y=NMDS2), alpha = .7, size = 3, hjust = .1) +
geom_point(data=nmds.scores,aes(x=NMDS1,y=NMDS2,colour=N15), stat="identity", size=5, alpha = .9) +
scale_fill_gradient(low="blue", high="red") +
#geom_polygon(data=hull.data,aes(x=NMDS1,y=NMDS2,fill=site.name,group=site.name),alpha=0.2) + # add the convex hulls
#  coord_fixed() + ## need aspect ratio of 1!
geom_segment(data = en_coord_cont,
aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm"))) +
geom_text(data = en_coord_cont, aes(x = NMDS1, y = NMDS2 +0.06, label = row.names(en_coord_cont)),
size = 3, vjust = "outward", fontface = "bold")+
geom_point(data = en_coord_cat, aes(x = NMDS1, y = NMDS2),
shape = "diamond", size = 4, alpha = 0.6, colour = "gray30") +
geom_text(data = en_coord_cat, aes(x = NMDS1, y = NMDS2 + 0.06, label = row.names(en_coord_cat)),
size = 3, vjust = "outward", fontface = "bold", colour = "gray30")+
#scale_fill_manual(values = c( "low" = "#CD1913", "mid" = "#F2BB05", "high" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
#scale_colour_manual(values = c( "low" = "#CD1913", "mid" = "#F2BB05", "high" ="#2F9D3E"))+#low-mid-high = red-yellow-green
#labs(colour = "seabird biomass", fill = "seabird biomass", shape = "seabird biomass")+
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.position = c(.08, .25))
ggplot() +
#geom_text(data=nmds.scores,aes(x=NMDS1,y=NMDS2), alpha = .7, size = 3, hjust = .1) +
geom_point(data=nmds.scores,aes(x=NMDS1,y=NMDS2,colour=N15), stat="identity", size=5, alpha = .9) +
scale_fill_gradient(low="blue", high="red")
ggplot() +
#geom_text(data=nmds.scores,aes(x=NMDS1,y=NMDS2), alpha = .7, size = 3, hjust = .1) +
geom_point(data=nmds.scores,aes(x=NMDS1,y=NMDS2,colour=N15), stat="identity", size=5, alpha = .9) +
scale_color_gradient(low = "darkblue", high = "yellow")
ggplot() +
#geom_text(data=nmds.scores,aes(x=NMDS1,y=NMDS2), alpha = .7, size = 3, hjust = .1) +
geom_point(data=nmds.scores,aes(x=NMDS1,y=NMDS2,colour=N15), stat="identity", size=5, alpha = .9) +
scale_color_gradient(low = "darkblue", high = "yellow") +
#geom_polygon(data=hull.data,aes(x=NMDS1,y=NMDS2,fill=site.name,group=site.name),alpha=0.2) + # add the convex hulls
#  coord_fixed() + ## need aspect ratio of 1!
geom_segment(data = en_coord_cont,
aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm"))) +
geom_text(data = en_coord_cont, aes(x = NMDS1, y = NMDS2 +0.06, label = row.names(en_coord_cont)),
size = 3, vjust = "outward", fontface = "bold")+
geom_point(data = en_coord_cat, aes(x = NMDS1, y = NMDS2),
shape = "diamond", size = 4, alpha = 0.6, colour = "gray30") +
geom_text(data = en_coord_cat, aes(x = NMDS1, y = NMDS2 + 0.06, label = row.names(en_coord_cat)),
size = 3, vjust = "outward", fontface = "bold", colour = "gray30")+
#scale_fill_manual(values = c( "low" = "#CD1913", "mid" = "#F2BB05", "high" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
#scale_colour_manual(values = c( "low" = "#CD1913", "mid" = "#F2BB05", "high" ="#2F9D3E"))+#low-mid-high = red-yellow-green
#labs(colour = "seabird biomass", fill = "seabird biomass", shape = "seabird biomass")+
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.position = c(.08, .25))
en_coord_cat
en_coord_cat = en_coord_cat %>% mutate(var.name = c("Low", "Mid", "High"))
en_coord_cat
en_coord_cont
en_coord_cont = en_coord_cont %>% mutate(var.name = c("Algae N15", "Shannon \nDiversity", "Species \nRichness", "Evenness"))
en_coord_cont
ggplot() +
#geom_text(data=nmds.scores,aes(x=NMDS1,y=NMDS2), alpha = .7, size = 3, hjust = .1) +
geom_point(data=nmds.scores,aes(x=NMDS1,y=NMDS2,colour=N15), stat="identity", size=5, alpha = .9) +
scale_color_gradient(low = "darkblue", high = "yellow") +
#geom_polygon(data=hull.data,aes(x=NMDS1,y=NMDS2,fill=site.name,group=site.name),alpha=0.2) + # add the convex hulls
#  coord_fixed() + ## need aspect ratio of 1!
geom_segment(data = en_coord_cont,
aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm"))) +
geom_text(data = en_coord_cont, aes(x = NMDS1, y = NMDS2 +0.06, label = en_coord_cont$var.name),
size = 3, vjust = "outward", fontface = "bold")+
geom_point(data = en_coord_cat, aes(x = NMDS1, y = NMDS2),
shape = "diamond", size = 4, alpha = 0.6, colour = "gray30") +
geom_text(data = en_coord_cat, aes(x = NMDS1, y = NMDS2 + 0.06, label = en_coord_cat$var.name),
size = 3, vjust = "outward", fontface = "bold", colour = "gray30")+
#scale_fill_manual(values = c( "low" = "#CD1913", "mid" = "#F2BB05", "high" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
#scale_colour_manual(values = c( "low" = "#CD1913", "mid" = "#F2BB05", "high" ="#2F9D3E"))+#low-mid-high = red-yellow-green
#labs(colour = "seabird biomass", fill = "seabird biomass", shape = "seabird biomass")+
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.position = c(.08, .25))
ggplot() +
#geom_text(data=nmds.scores,aes(x=NMDS1,y=NMDS2), alpha = .7, size = 3, hjust = .1) +
geom_point(data=nmds.scores,aes(x=NMDS1,y=NMDS2,colour=N15), stat="identity", size=5, alpha = .9) +
scale_color_gradient(low = "darkblue", high = "yellow") +
#geom_polygon(data=hull.data,aes(x=NMDS1,y=NMDS2,fill=site.name,group=site.name),alpha=0.2) + # add the convex hulls
#  coord_fixed() + ## need aspect ratio of 1!
geom_segment(data = en_coord_cont,
aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm"))) +
geom_text(data = en_coord_cont, aes(x = NMDS1, y = NMDS2 +0.06, label = en_coord_cont$var.name),
size = 3, vjust = "outward", fontface = "bold")+
geom_point(data = en_coord_cat, aes(x = NMDS1, y = NMDS2),
shape = "diamond", size = 4, alpha = 0.6, colour = "gray30") +
geom_text(data = en_coord_cat, aes(x = NMDS1, y = NMDS2 - 0.06, label = en_coord_cat$var.name),
size = 3, vjust = "outward", fontface = "bold", colour = "gray30")+
#scale_fill_manual(values = c( "low" = "#CD1913", "mid" = "#F2BB05", "high" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
#scale_colour_manual(values = c( "low" = "#CD1913", "mid" = "#F2BB05", "high" ="#2F9D3E"))+#low-mid-high = red-yellow-green
#labs(colour = "seabird biomass", fill = "seabird biomass", shape = "seabird biomass")+
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.position = c(.08, .25))
algae.nmds.plot.rotate <-
ggplot() +
#geom_text(data=nmds.scores,aes(x=NMDS1,y=NMDS2), alpha = .7, size = 3, hjust = .1) +
geom_point(data=nmds.scores,aes(x=NMDS1,y=NMDS2,colour=N15), stat="identity", size=5, alpha = .9) +
scale_color_gradient(low = "darkblue", high = "yellow") +
#geom_polygon(data=hull.data,aes(x=NMDS1,y=NMDS2,fill=site.name,group=site.name),alpha=0.2) + # add the convex hulls
#  coord_fixed() + ## need aspect ratio of 1!
geom_segment(data = en_coord_cont,
aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm"))) +
geom_text(data = en_coord_cont, aes(x = NMDS1, y = NMDS2 +0.06, label = en_coord_cont$var.name),
size = 3, vjust = "outward", fontface = "bold")+
geom_point(data = en_coord_cat, aes(x = NMDS1, y = NMDS2),
shape = "diamond", size = 4, alpha = 0.6, colour = "gray30") +
geom_text(data = en_coord_cat, aes(x = NMDS1, y = NMDS2 - 0.06, label = en_coord_cat$var.name),
size = 3, vjust = "outward", fontface = "bold", colour = "gray30")+
#scale_fill_manual(values = c( "low" = "#CD1913", "mid" = "#F2BB05", "high" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
#scale_colour_manual(values = c( "low" = "#CD1913", "mid" = "#F2BB05", "high" ="#2F9D3E"))+#low-mid-high = red-yellow-green
#labs(colour = "seabird biomass", fill = "seabird biomass", shape = "seabird biomass")+
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.position = c(.08, .25))
algae.nmds.plot
algae.nmds.plot.rotate
ggsave(algae.nmds.plot.rotate, file = "../output/seabird-algaediv/organised_output/1_NMDS_AlgaeDiv.jpg",
width = 7, height = 5)
distplot(algae.div.seabirds$richness, type="poisson") #not bad
hist(algae.div.seabirds$richness)
shapiro.test((algae.div.seabirds$richness)) # Looks normally distributed but p = 0.0002252
qqPlot(algae.div.seabirds$richness)
distplot(algae.div.seabirds$richness, type="poisson") #not bad
vcd::distplot(algae.div.seabirds$richness, type="poisson") #not bad
#not poisson
richness.lmer <-lmer(richness~N15*distance.along.transect + exposure + (1|site.name), data = algae.div.seabirds)
#poisson
richness.glmer <- glmer(richness ~ N15l*distance.along.transect + exposure + (1|site.name), family = "poisson", data = algae.div.seabirds)
#poisson
richness.glmer <- glmer(richness ~ N15*distance.along.transect + exposure + (1|site.name), family = "poisson", data = algae.div.seabirds)
AIC(richness.lmer, richness.glmer)
summary(richness.lmer
summary(richness.lmer)
summary(richness.lmer)
anova(richness.lmer)
Anova(richness.lmer)
effect_plot(richness.lmer, pred = N15, interval = TRUE, plot.points = TRUE, data = algae.div.seabirds)
p.lmer.rich<- effect_plot(richness.lmer, pred = N15, interval = TRUE, plot.points = TRUE, jitter = 0.2, cat.geom= line, data = algae.div.seabirds)
p.lmer.rich <- p.lmer.rich +
ylab("Macroalgal Species Richness") +
xlab(expression(italic(delta)^15*N))+
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.position = c(.85,.85))
p.lmer.rich
p.lmer.rich +
geom_point(size = 4)
ylab("Macroalgal Species Richness") +
xlab(expression(italic(delta)^15*N))+
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.position = c(.85,.85))
p.lmer.rich +
geom_point(size = 4) +
ylab("Macroalgal Species Richness") +
xlab(expression(italic(delta)^15*N))+
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.position = c(.85,.85))
effect_plot(richness.lmer, pred = N15, interval = TRUE, plot.points = TRUE, jitter = 0.2, cat.geom= line, data = algae.div.seabirds, size = 4)
p.lmer.rich <- p.lmer.rich +
ylab("Macroalgal Species Richness") +
xlab(expression(italic(delta)^15*N))+
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.position = c(.85,.85))
p.lmer.rich
ggsave("../output/seabird-algaediv/organised_output/2_Richness_vs_N15.jpg", plot = p.lmer.rich, width = 7, height = 5)
emmip(richness.lmer, distance.along.transect ~ N15, at = mylist, CIs = TRUE)
plot_summs(richness.lmer)
plot_summs(richness.lmer)
range(algae.div.seabirds$N15)
levels(algae.div.seabirds$distance.along.transect)
(mylist <- list(
N15 = seq(0, 12, by = 5),
distance.along.transect = c("10",  "40")
))
emmip(richness.lmer, distance.along.transect ~ N15, at = mylist, CIs = TRUE)
ggsave("../output/seabird-algaediv/organised_output/2_linearpred_distance_vs_N15.jpg", plot = p.lmer.rich.2, width = 7, height = 5)
p.lmer.rich.2 <- emmip(richness.lmer, distance.along.transect ~ N15, at = mylist, CIs = TRUE)
ggsave("../output/seabird-algaediv/organised_output/2_linearpred_distance_vs_N15.jpg", plot = p.lmer.rich.2, width = 7, height = 5)
vif(richness.lmer)
plot(richness.lmer)
emtrends(richness.lmer,  ~ distance.along.transect, var = "N15")
test(emtrends(richness.lmer, ~ distance.along.transect, var = "N15", adjust = "fdr"))
#evenness - seabird level----
hist(algae.div.seabirds$evenness) #beautiful distribution!
evenness.sb.lmm<-lmer(evenness~N15*distance.along.transect + exposure + (1|site.name), data = algae.div.seabirds)
summary(evenness.sb.lmm)
Anova(evenness.sb.lmm)
anova(evenness.sb.lmm)
vif(evenness.sb.lmm)
#compare to LRT:
evenness.sb.lmm.r<-lmer(evenness~distance.along.transect + exposure + (1|site.name), data = algae.div.seabirds)
anova(evenness.sb.lmm, evenness.sb.lmm.r) #Nope -seabirds means nothing lol
plot_summs(evenness.sb.lmm)
#look at emmeans:
evenness.sb.lmm %>%
emmeans(~ seabird_level*distance.along.transect,
type = "response")
#look at emmeans:
evenness.sb.lmm %>%
emmeans(~ N15*distance.along.transect,
type = "response")
emmeans(evenness.sb.lmm, list(pairwise ~ N15*distance.along.transect), type = "response", adjust = "fdr")
effect_plot(richness.sb.lmm, pred = N15, interval = TRUE, plot.points = TRUE, data = algae.div.seabirds)
effect_plot(evenness.sb.lmm, pred = N15, interval = TRUE, plot.points = TRUE, data = algae.div.seabirds)
effect_plot(evenness.sb.lmm, pred = N15, interval = TRUE, plot.points = TRUE, jitter = 0.2, cat.geom= line, data = algae.div.seabirds)
p.lmer.even <- p.lmer.even +
ylab("Macroalgal Community Evenness") +
xlab(expression(italic(delta)^15*N))+
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.position = c(.85,.85))
p.lmer.even <- effect_plot(evenness.sb.lmm, pred = N15, interval = TRUE, plot.points = TRUE, jitter = 0.2, cat.geom= line, data = algae.div.seabirds)
p.lmer.even <- p.lmer.even +
ylab("Macroalgal Community Evenness") +
xlab(expression(italic(delta)^15*N))+
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.position = c(.85,.85))
p.lmer.even
ggsave("../output/seabird-algaediv/organised_output/3_Evenness_vs_N15.jpg", plot = p.lmer.rich, width = 7, height = 5)
vif(evenness.sb.lmm)
plot(evenness.sb.lmm)
emtrends(evenness.sb.lmm,  ~ distance.along.transect, var = "N15")
test(emtrends(evenness.sb.lmm, ~ distance.along.transect, var = "N15", adjust = "fdr"))
plot_summs(evenness.sb.lmm)
range(algae.div.seabirds$N15)
levels(algae.div.seabirds$distance.along.transect)
(mylist <- list(
N15 = seq(0, 12, by = 5),
distance.along.transect = c("10",  "40")
))
p.lmer.rich.2 <- emmip(evenness.sb.lmm, distance.along.transect ~ N15, at = mylist, CIs = TRUE)
p.lmer.rich.2
p.lmer.even.2 <- emmip(evenness.sb.lmm, distance.along.transect ~ N15, at = mylist, CIs = TRUE)
p.lmer.even.2
ggsave("../output/seabird-algaediv/organised_output/3b_linearpred_distance_vs_N15.jpg", plot = p.lmer.even.2, width = 7, height = 5)
#shannon- algae n15-----
shannon.n15.lmm<-lmer(shannon~N15*distance.along.transect + exposure + (1|site.name), data = algae.div.seabirds)
#shannon- algae n15-----
hist(algae.div.seabirds$shannon)
shannon.n15.lmm<-lmer(shannon~N15*distance.along.transect + exposure + (1|site.name), data = algae.div.seabirds)
summary(shannon.n15.lmm)
Anova(shannon.n15.lmm)
vif(shannon.n15.lmm)
plot(shannon.n15.lmm)
effect_plot(shannon.n15.lmm, pred = N15, interval = TRUE, plot.points = TRUE, data = algae.div.seabirds)
p.lmer.shan <- effect_plot(shannon.n15.lmm, pred = N15, interval = TRUE, plot.points = TRUE, jitter = 0.2, cat.geom= line, data = algae.div.seabirds)
p.lmer.shan +
ylab("Macroalgal Shannon Diversity Index") +
xlab(expression(italic(delta)^15*N))+
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.position = c(.85,.85))
p.lmer.shan <- p.lmer.shan +
ylab("Macroalgal Shannon Diversity Index") +
xlab(expression(italic(delta)^15*N))+
theme_bw() +
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
legend.position = c(.85,.85))
ggsave("../output/seabird-algaediv/organised_output/4_Shannon_vs_N15.jpg", plot = p.lmer.rich, width = 7, height = 5)
emtrends(shannon.n15.lmm,  ~ distance.along.transect, var = "N15")
test(emtrends(shannon.n15.lmm, ~ distance.along.transect, var = "N15", adjust = "fdr"))
plot_summs(eshannon.n15.lmm)
plot_summs(shannon.n15.lmm)
range(algae.div.seabirds$N15)
levels(algae.div.seabirds$distance.along.transect)
(mylist <- list(
N15 = seq(0, 12, by = 5),
distance.along.transect = c("10",  "40")
))
p.lmer.shan.2 <- emmip(shannon.n15.lmm, distance.along.transect ~ N15, at = mylist, CIs = TRUE)
p.lmer.shan.2
ggsave("../output/seabird-algaediv/organised_output/4b_linearpred_distance_vs_N15.jpg", plot = p.lmer.shan.2, width = 7, height = 5)
#Make into a long form as a relative cover?
relcover.long <- algae.div.seabirds %>% gather(key = species.names, value = abundance, colnames(algae.div.seabirds[, 5:35]))
relcover.long$species.name.full <- relcover.long $species.names
relcover.long  <- separate(data = relcover.long , col = species.name.full, into = c("genus", "species"), sep = "\\.")
head(relcover.long)
algae.sum <- ddply(relcover.long , c("seabird_level", "genus"),summarise,
mean_abund = mean(abundance),
n_abund = length(abundance),
se_abund = sd(abundance)/sqrt(n_abund))
#Remove any genera that have 0 mean
algae.sum <- algae.sum[algae.sum$mean_abund != 0, ]
algal.genus.plot <- ggplot(algae.sum, aes(x = genus, y = mean_abund)) +
geom_point(position = position_dodge(width = 1), alpha = 0.5, aes(color = algae.sum$seabird_level)) +
geom_errorbar(position = position_dodge(width = 1), alpha = 0.5, aes(ymin = (mean_abund-se_abund), ymax = (mean_abund + se_abund), color = algae.sum$seabird_level)) +
ylab("Mean Percent Cover (%) \n") +
xlab("\n Macroalgal Genus") +
labs(color = 'Seabird Biomass', fill = 'Seabird Biomass') +
#scale_color_manual(labels = c("low", "mid", "high")
#,values = c("blue3", "gold", "red3")) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust=1))
algal.genus.plot
ggsave(algal.genus.plot, file = "../output/seabird-algaediv/organised_output/5_macroalgae_by_genus_seabirdlevel.jpg", width = 7, height = 5)
#What about a stacked barplot
#Need 24 colors
library(RColorBrewer)
spec <- brewer.pal(4, "Spectral")
spec <- colorRampPalette(spec)(24)
# Plot it
macroalgal.stack <- ggplot(relcover.long , aes(fill = genus, y = abundance, x = seabird_level))+
geom_bar(position = "fill", stat =  "identity")+
#scale_fill_brewer(palette = "Spectral")+
scale_fill_manual(values = spec) +
xlab("Seabird level")+
ylab("Relative Percent Cover")+
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)
)
macroalgal.stack
ggsave(macroalgal.stack, file = "../output/seabird-algaediv/organised_output/6_macroalgae_stacked_plot.jpg", width = 7, height = 5)
print(colnames(relcover.long))
print(colnames(algae.div.seabirds))
print(colnames(algae.div.seabirds[,(5:35)]))
columns <- colnames(algae.div.seabirds[,(5:35)])
#Loop
dat <- algae.div.seabirds
models <- list()
for (i in columns) {
f <- formula(paste(i, "~ N15*distance.along.transect + exposure + (1|site.name)"))
models[[i]] <- lmer(f, data=dat, na.action = na.omit)
print(Anova(models[[i]]))
}
columns
relcover.long
genus.wide <- relcover.long %>% spread(genus,abundance)
genus.wide
View(genus.wide)
View(relcover.long)
str(relcover.long$abundance)
relcover.long %>% spread(genus,abundance)
#Can we expand back out to genus?
genus.sum <- ddply(relcover.long , c("site.name","distance.along.transect","exposure", "genus"),summarise,
mean_abund = mean(abundance),
n_abund = length(abundance),
se_abund = sd(abundance)/sqrt(n_abund))
genus.sum
#nope
#manual adding of each genus?
colnames(algae.div.seabirds)
genus <- algae.div.seabirds[,c(1:35, 59:60)]
genus <- algae.div.seabirds[,c(1:3, 59:60)]
genus$Arainvillea <- algae.div.seabirds$Avrainvillea.lacerata
genus$Boodlea <- algae.div.seabirds$Boodlea.composita
genus$Caldora <- algae.div.seabirds$Caldora.penicillata
genus$Caulerpa <- sum(algae.div.seabirds$Caulerpa.chemnitzia, algae.div.seabirds$Caulerpa.serrulata)
genus$Caulerpa
genus$Caldora
genus$Caulerpa <- (algae.div.seabirds$Caulerpa.chemnitzia + algae.div.seabirds$Caulerpa.serrulata)
genus$Caulerpa
genus$Chlorodesmis <- algae.div.seabirds$Chlorodesmis.fastigiata
genus$Cladophora <- algae.div.seabirds$Cladophora.fuliginosa
genus$Dictyosphaeria <- algae.div.seabirds$Dictyosphaeria.cavernosa
genus$Dictyota <- (algae.div.seabirds$Dictyota.ceylanica + algae.div.seabirds$Dictyota.friabilis)
genus$Galaxaura <- algae.div.seabirds$galaxaura.filamentosa
genus$Gelidiella <- algae.div.seabirds$Gelidiella.acerosa
genus$Halimeda <- (algae.div.seabirds$Halimeda.discoidea + algae.div.seabirds$Halimeda.distorta +
algae.div.seabirds$Halimeda.heteromorpha + algae.div.seabirds$Halimeda.minima +
algae.div.seabirds$Halimeda.opuntia)
genus$Hydroclathrus <- algae.div.seabirds$Hydroclathrus.clathratus
genus$Hydrocoleum <- (algae.div.seabirds$Hydrocoleum.coccineum + algae.div.seabirds$Hydrocoleum.spp)
genus$Hypena <- algae.div.seabirds$Hypnea.spinella
genus$Jania <- algae.div.seabirds$Jania.articulata
genus$Lobophora <- algae.div.seabirds$Lobophora.spp
genus$Lyngbya <- algae.div.seabirds$Lyngbya.sordida
genus$Neomeris <- algae.div.seabirds$Neomeris.vanbosseae
genus$Oscillatoria <- algae.div.seabirds$Oscilllatoria.spp
genus$Pseudanabaena <- algae.div.seabirds$Pseudanabaena.lonchoides
genus$Pterocladiella <- algae.div.seabirds$Pterocladiella.caerulescens
genus$Schizothrix <- algae.div.seabirds$Schizothrix.minuta
genus$Symploca <- algae.div.seabirds$Symploca.hydnoides
genus$Turbinaria <- algae.div.seabirds$Turbinaria.ornata
colnames(genus)
print(colnames(genus[,(6:29)]))
columns <- colnames(genus[,(6:29)])
#Loop
dat <- genus
models <- list()
for (i in columns) {
f <- formula(paste(i, "~ N15*distance.along.transect + exposure + (1|site.name)"))
models[[i]] <- lmer(f, data=dat, na.action = na.omit)
print(Anova(models[[i]]))
}
columns <- colnames(genus[,c(6:24, 26:29)])
#Loop
dat <- genus
models <- list()
for (i in columns) {
f <- formula(paste(i, "~ N15*distance.along.transect + exposure + (1|site.name)"))
models[[i]] <- lmer(f, data=dat, na.action = na.omit)
print(Anova(models[[i]]))
}
plot(N15, Dictyosphaeria, data = genus)
genus %>%
ggplot(aes(x = N15, y = Dictyosphaeria))+
geom_point()+
geom_smooth(method = "lm")
genus %>%
ggplot(aes(x = N15, y = Dictyota))+
geom_point()+
geom_smooth(method = "lm")
genus %>%
ggplot(aes(x = N15, y = Gelidiella))+
geom_point()+
geom_smooth(method = "lm")
#4. Hypnea
genus %>%
ggplot(aes(x = N15, y = Hypnea))+
geom_point()+
geom_smooth(method = "lm")
#4. Hypnea
genus %>%
ggplot(aes(x = N15, y = Hypena))+
geom_point()+
geom_smooth(method = "lm")
genus %>%
ggplot(aes(x = N15, y = Lyngbya))+
geom_point()+
geom_smooth(method = "lm")
genus %>%
ggplot(aes(x = N15, y = Neomeris))+
geom_point()+
geom_smooth(method = "lm")
enus %>%
ggplot(aes(x = N15, y = Lyngbya))+
geom_point(aes(color = distance.along.transect))+
geom_smooth(method = "lm")
genus %>%
ggplot(aes(x = N15, y = Lyngbya))+
geom_point(aes(color = distance.along.transect))+
geom_smooth(method = "lm")
#4. Hypnea
genus %>%
ggplot(aes(x = N15, y = Hypena))+
geom_point(aes(color = distance.along.transect))+
geom_smooth(method = "lm")
genus %>%
ggplot(aes(x = N15, y = Gelidiella))+
geom_point(aes(color = distance.along.transect))+
geom_smooth(method = "lm")
genus %>%
ggplot(aes(x = N15, y = Dictyota))+
geom_point(aes(color = distance.along.transect))+
geom_smooth(method = "lm")
genus %>%
ggplot(aes(x = N15, y = Dictyosphaeria))+
geom_point(aes(color = distance.along.transect))+
geom_smooth(method = "lm")
genus %>%
ggplot(aes(x = N15, y = Neomeris))+
geom_point(aes(color = distance.along.transect))+
geom_smooth(method = "lm")
#7. Oscillatoria
genus %>%
ggplot(aes(x = N15, y = Oscillatoria))+
geom_point(aes(color = distance.along.transect))+
geom_smooth(method = "lm")
#8.Symploca
genus %>%
ggplot(aes(x = N15, y = Symploca))+
geom_point(aes(color = distance.along.transect))+
geom_smooth(method = "lm")
#8. Turbinaria (was not significant)
genus %>%
ggplot(aes(x = N15, y = Turbinaria))+
geom_point(aes(color = distance.along.transect))+
geom_smooth(method = "lm")
#Lobophora(was not significant just wanna see)
genus %>%
ggplot(aes(x = N15, y = Lobophora))+
geom_point(aes(color = distance.along.transect))+
geom_smooth(method = "lm")
