panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)
)
# Plot it
macroalgal.stack <- ggplot(relcover.long , aes(fill = genus, y = abundance, x = reststat))+
geom_bar(position = "fill", stat =  "identity")+
#scale_fill_brewer(palette = "Spectral")+
scale_fill_manual(values = spec) +
xlab("") +
ylab("Relative Macroaglal Percent Cover")+
labs(fill = 'Genus') +
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)
)
ggsave(macroalgal.stack, file = "../output/seabird-algaediv/organised_output/6_macroalgae_stacked_plot.jpg", width = 7, height = 5)
algae.sum$genus[algae.sum$genus == "galaxaura"] <- "Galaxaura"
algal.genus.plot <- ggplot(algae.sum, aes(x = genus, y = mean_abund)) +
geom_point(position = position_dodge(width = 1), alpha = 0.5, aes(color = algae.sum$reststat)) +
geom_errorbar(position = position_dodge(width = 1), alpha = 0.5, aes(ymin = (mean_abund-se_abund), ymax = (mean_abund + se_abund), color = algae.sum$reststat)) +
scale_fill_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
scale_colour_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+
ylab("Mean Percent Cover (%) \n") +
xlab("\n Macroalgal Genus") +
labs(color = 'Restoration Status', fill = 'Restoration Status') +
#scale_color_manual(labels = c("low", "mid", "high")
#,values = c("blue3", "gold", "red3")) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust=1))
algal.genus.plot
ggsave(algal.genus.plot, file = "../output/seabird-algaediv/organised_output/5b_macroalgae_by_genus_reststatus.jpg", width = 7, height = 5)
# Plot it
macroalgal.stack <- ggplot(relcover.long , aes(fill = genus, y = abundance, x = reststat))+
geom_bar(position = "fill", stat =  "identity")+
#scale_fill_brewer(palette = "Spectral")+
scale_fill_manual(values = spec) +
xlab("") +
ylab("Relative Macroaglal Percent Cover")+
labs(fill = 'Genus') +
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)
)
macroalgal.stack
#galaxaura needs to be capitalized
relcover.long$genus[relcover.long$genus == "galaxaura"] <- "Galaxaura"
algae.sum <- ddply(relcover.long , c("reststat", "genus"),summarise,
mean_abund = mean(abundance),
n_abund = length(abundance),
se_abund = sd(abundance)/sqrt(n_abund))
#Remove any genera that have 0 mean
algae.sum <- algae.sum[algae.sum$mean_abund != 0, ]
algal.genus.plot <- ggplot(algae.sum, aes(x = genus, y = mean_abund)) +
geom_point(position = position_dodge(width = 1), alpha = 0.5, aes(color = algae.sum$reststat)) +
geom_errorbar(position = position_dodge(width = 1), alpha = 0.5, aes(ymin = (mean_abund-se_abund), ymax = (mean_abund + se_abund), color = algae.sum$reststat)) +
scale_fill_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
scale_colour_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+
ylab("Mean Percent Cover (%) \n") +
xlab("\n Macroalgal Genus") +
labs(color = 'Restoration Status', fill = 'Restoration Status') +
#scale_color_manual(labels = c("low", "mid", "high")
#,values = c("blue3", "gold", "red3")) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust=1))
algal.genus.plot
# Plot it
macroalgal.stack <- ggplot(relcover.long , aes(fill = genus, y = abundance, x = reststat))+
geom_bar(position = "fill", stat =  "identity")+
#scale_fill_brewer(palette = "Spectral")+
scale_fill_manual(values = spec) +
xlab("") +
ylab("Relative Macroaglal Percent Cover")+
labs(fill = 'Genus') +
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)
)
macroalgal.stack
ggsave(macroalgal.stack, file = "../output/seabird-algaediv/organised_output/6_macroalgae_stacked_plot.jpg", width = 7, height = 5)
algal.genus.plot <- ggplot(algae.sum, aes(x = genus, y = mean_abund)) +
geom_point(position = position_dodge(width = 1), alpha = 0.5, aes(color = algae.sum$reststat)) +
geom_errorbar(position = position_dodge(width = 1), alpha = 0.5, aes(ymin = (mean_abund-se_abund), ymax = (mean_abund + se_abund), color = algae.sum$reststat)) +
scale_fill_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
scale_colour_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+
ylab("Mean Percent Cover (%) \n") +
xlab("\n Macroalgal Genus") +
labs(color = 'Restoration Status', fill = 'Restoration Status') +
#scale_color_manual(labels = c("low", "mid", "high")
#,values = c("blue3", "gold", "red3")) +
theme_classic() +
theme(legend.position = c(0.2, 0.85)) +
theme(axis.text.x = element_text(angle = 45, hjust=1))
algal.genus.plot
algal.genus.plot <- ggplot(algae.sum, aes(x = genus, y = mean_abund)) +
geom_point(position = position_dodge(width = 1), alpha = 0.5, aes(color = algae.sum$reststat)) +
geom_errorbar(position = position_dodge(width = 1), alpha = 0.5, aes(ymin = (mean_abund-se_abund), ymax = (mean_abund + se_abund), color = algae.sum$reststat)) +
scale_fill_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
scale_colour_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+
ylab("Mean Percent Cover (%) \n") +
xlab("\n Macroalgal Genus") +
labs(color = 'Restoration Status', fill = 'Restoration Status') +
#scale_color_manual(labels = c("low", "mid", "high")
#,values = c("blue3", "gold", "red3")) +
theme_classic() +
theme(legend.position = c(0.1, 0.75)) +
theme(axis.text.x = element_text(angle = 45, hjust=1))
algal.genus.plot
algal.genus.plot <- ggplot(algae.sum, aes(x = genus, y = mean_abund)) +
geom_point(position = position_dodge(width = 1), alpha = 0.5, aes(color = algae.sum$reststat)) +
geom_errorbar(position = position_dodge(width = 1), alpha = 0.5, aes(ymin = (mean_abund-se_abund), ymax = (mean_abund + se_abund), color = algae.sum$reststat)) +
scale_fill_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
scale_colour_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+
ylab("Mean Percent Cover (%) \n") +
xlab("\n Macroalgal Genus") +
labs(color = 'Restoration Status', fill = 'Restoration Status') +
#scale_color_manual(labels = c("low", "mid", "high")
#,values = c("blue3", "gold", "red3")) +
theme_classic() +
theme(legend.position = c(0.15, 0.75)) +
theme(axis.text.x = element_text(angle = 45, hjust=1))
algal.genus.plot
ggsave(algal.genus.plot, file = "../output/seabird-algaediv/organised_output/5b_macroalgae_by_genus_reststatus.jpg", width = 7, height = 5)
algae.div.seabirds <- algae.div.seabirds %>% mutate(reststat = fct_relevel(reststat, "reference", "recovering", "unrestored"))
#Make into a long form as a relative cover?
relcover.long <- algae.div.seabirds %>% gather(key = species.names, value = abundance, colnames(algae.div.seabirds[, 5:35]))
relcover.long$species.name.full <- relcover.long $species.names
relcover.long  <- separate(data = relcover.long , col = species.name.full, into = c("genus", "species"), sep = "\\.")
head(relcover.long)
#galaxaura needs to be capitalized
relcover.long$genus[relcover.long$genus == "galaxaura"] <- "Galaxaura"
algae.sum <- ddply(relcover.long , c("reststat", "genus"),summarise,
mean_abund = mean(abundance),
n_abund = length(abundance),
se_abund = sd(abundance)/sqrt(n_abund))
#Remove any genera that have 0 mean
algae.sum <- algae.sum[algae.sum$mean_abund != 0, ]
algal.genus.plot <- ggplot(algae.sum, aes(x = genus, y = mean_abund)) +
geom_point(position = position_dodge(width = 1), alpha = 0.5, aes(color = algae.sum$reststat)) +
geom_errorbar(position = position_dodge(width = 1), alpha = 0.5, aes(ymin = (mean_abund-se_abund), ymax = (mean_abund + se_abund), color = algae.sum$reststat)) +
scale_fill_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+ #low-mid-high = red-yellow-green
scale_colour_manual(values = c( "unrestored" = "#CD1913", "recovering" = "#F2BB05", "reference" ="#2F9D3E"))+
ylab("Mean Percent Cover (%) \n") +
xlab("\n Macroalgal Genus") +
labs(color = 'Restoration Status', fill = 'Restoration Status') +
#scale_color_manual(labels = c("low", "mid", "high")
#,values = c("blue3", "gold", "red3")) +
theme_classic() +
theme(legend.position = c(0.15, 0.75)) +
theme(axis.text.x = element_text(angle = 45, hjust=1))
algal.genus.plot
ggsave(algal.genus.plot, file = "../output/seabird-algaediv/organised_output/5b_macroalgae_by_genus_reststatus.jpg", width = 7, height = 5)
spec <- brewer.pal(4, "Spectral")
spec <- colorRampPalette(spec)(24)
# Plot it
macroalgal.stack <- ggplot(relcover.long , aes(fill = genus, y = abundance, x = reststat))+
geom_bar(position = "fill", stat =  "identity")+
#scale_fill_brewer(palette = "Spectral")+
scale_fill_manual(values = spec) +
xlab("") +
ylab("Relative Macroaglal Percent Cover")+
labs(fill = 'Genus') +
theme_bw()+
theme(panel.grid.major = element_blank(), # remove gridlines
panel.grid.minor = element_blank(), #remove gridlines
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)
)
macroalgal.stack
ggsave(macroalgal.stack, file = "../output/seabird-algaediv/organised_output/6_macroalgae_stacked_plot.jpg", width = 7, height = 5)
corrplot::cor(genus,
nmds.scores,
use = "complete.obs",
method = "pearson")
cor(genus,
nmds.scores,
use = "complete.obs",
method = "pearson")
#Can we expand back out to genus?
#nope
#manual adding of each genus?
colnames(algae.div.seabirds)
genus <- algae.div.seabirds[,c(1:3, 59:60)]
genus$Arainvillea <- algae.div.seabirds$Avrainvillea.lacerata
genus$Boodlea <- algae.div.seabirds$Boodlea.composita
genus$Caldora <- algae.div.seabirds$Caldora.penicillata
genus$Caulerpa <- (algae.div.seabirds$Caulerpa.chemnitzia + algae.div.seabirds$Caulerpa.serrulata)
genus$Chlorodesmis <- algae.div.seabirds$Chlorodesmis.fastigiata
genus$Cladophora <- algae.div.seabirds$Cladophora.fuliginosa
genus$Dictyosphaeria <- algae.div.seabirds$Dictyosphaeria.cavernosa
genus$Dictyota <- (algae.div.seabirds$Dictyota.ceylanica + algae.div.seabirds$Dictyota.friabilis)
genus$Galaxaura <- algae.div.seabirds$galaxaura.filamentosa
genus$Gelidiella <- algae.div.seabirds$Gelidiella.acerosa
genus$Halimeda <- (algae.div.seabirds$Halimeda.discoidea + algae.div.seabirds$Halimeda.distorta +
algae.div.seabirds$Halimeda.heteromorpha + algae.div.seabirds$Halimeda.minima +
algae.div.seabirds$Halimeda.opuntia)
genus$Hydroclathrus <- algae.div.seabirds$Hydroclathrus.clathratus
genus$Hydrocoleum <- (algae.div.seabirds$Hydrocoleum.coccineum + algae.div.seabirds$Hydrocoleum.spp)
genus$Hypena <- algae.div.seabirds$Hypnea.spinella
genus$Jania <- algae.div.seabirds$Jania.articulata
genus$Lobophora <- algae.div.seabirds$Lobophora.spp
genus$Lyngbya <- algae.div.seabirds$Lyngbya.sordida
genus$Neomeris <- algae.div.seabirds$Neomeris.vanbosseae
genus$Oscillatoria <- algae.div.seabirds$Oscilllatoria.spp
genus$Pseudanabaena <- algae.div.seabirds$Pseudanabaena.lonchoides
genus$Pterocladiella <- algae.div.seabirds$Pterocladiella.caerulescens
genus$Schizothrix <- algae.div.seabirds$Schizothrix.minuta
genus$Symploca <- algae.div.seabirds$Symploca.hydnoides
genus$Turbinaria <- algae.div.seabirds$Turbinaria.ornata
colnames(genus)
print(colnames(genus[,c(6:24, 26:29)]))
columns <- colnames(genus[,c(6:24, 26:29)])
#Loop
dat <- genus
models <- list()
for (i in columns) {
f <- formula(paste(i, "~ N15*distance.along.transect + exposure + (1|site.name)"))
models[[i]] <- lmer(f, data=dat, na.action = na.omit)
print(Anova(models[[i]]))
}
#For some reason, pseudanabaena is not able to make a VCV matrix
cor(genus,
nmds.scores,
use = "complete.obs",
method = "pearson")
genus
cor(genus[, c(6:29)],
nmds.scores,
use = "complete.obs",
method = "pearson")
nmds.scores
cor(genus[, c(6:29)],
nmds.scores[, c(1:3)],
use = "complete.obs",
method = "pearson")
cor.genus <- cor(genus[, c(6:29)],
nmds.scores[, c(1:3)],
use = "complete.obs",
method = "pearson")
View(cor.genus)
corrplot(cor.genus)
write.csv(cor.genus, "../output/seabird-algaediv/organised_output/nmds_axis_correlation_by_genus.csv", header  = T)
write.csv(cor.genus, "../output/seabird-algaediv/organised_output/nmds_axis_correlation_by_genus.csv")
p.corr.nmds <- corrplot(cor.genus)
ggsave("../output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus.jpg", plot = p.corr.nmds, width = 7, height = 5)
p.corr.nmds <- corrplot(cor.genus)
ggsave("../output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus.jpg", plot = p.corr.nmds, width = 7, height = 5)
pdf(file ="/output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus.pdf")
pdf(file ="../output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus.pdf")
p.corr.nmds <- corrplot(cor.genus)
dev.off()
cor.genus <- cor(genus[, c(6:29)],
nmds.scores[, c(1:3)],
use = "complete.obs",
method = "spearman")
View(cor.genus)
write.csv(cor.genus, "../output/seabird-algaediv/organised_output/nmds_axis_correlation_by_genus_spearman.csv")
pdf(file ="../output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus_spearman.pdf")
p.corr.nmds <- corrplot(cor.genus)
dev.off()
p.corr.nmds <- corrplot(cor.genus)
pdf(file ="../output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus_spearman.pdf")
corrplot(cor.genus)
dev.off()
corrplot(cor.genus)
ggsave("../output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus.jpg", plot = last_plot(), width = 7, height = 5)
corrplot(cor.genus)
pdf(file = "../output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus_spearman.pdf")
corrplot(cor.genus, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "r", cl.ratio = .5)
dev.off()
cor.genus <- cor(genus[, c(6:29)],
nmds.scores[, c(1:2)],
use = "complete.obs",
method = "spearman")
View(cor.genus)
write.csv(cor.genus, "../output/seabird-algaediv/organised_output/nmds_axis_correlation_by_genus_spearman.csv")
corrplot(cor.genus)
pdf(file = "../output/seabird-algaediv/organised_output/7_corrplot_NMDSaxes_genus_spearman.pdf")
corrplot(cor.genus, type = "full",
addCoef.col = NULL, addCoefasPercent = FALSE, tl.col = "black", tl.cex = 0.5, cl.pos = "r", cl.ratio = .5)
dev.off()
cor.test(cor.genus)
cor.mtest(genus[, c(6:29)],
nmds.scores[, c(1:2)],
use = "complete.obs",
method = "spearman")
corr.test( genus[, c(6:29)],
nmds.scores[, c(1:2)],
use = "complete.obs",
method = "spearman")
psych::corr.test( genus[, c(6:29)],
nmds.scores[, c(1:2)],
use = "complete.obs",
method = "spearman")
cor.test( genus[, c(6:29)],
nmds.scores[, c(1:2)],
use = "complete.obs",
method = "spearman")
genus[, c(6:29)]
[, c(1:2)]
nmds.scores[, c(1:2)]
cor.test(genus[, c(6:29)],
nmds.scores[, c(1:2)],
use = "complete.obs",
method = "spearman")
?cor.test()
?cor.mtest()
#what about combinng into a single matrix
nmds.gen <- merge(genus, nmds.scores)
nmds.gen
cor.mtest(nmds.gen[, c(6:31)],
use = "complete.obs",
method = "spearman")
cor.mtest(nmds.gen[, c(6:31)])
View(cor.mtest(nmds.gen[, c(6:31)]))
cor(nmds.gen, use = "pairwise.complete.obs", method  = "spearman")
cor(nmds.gen, use = "complete.obs", method  = "spearman")
cor(nmds.gen[,c(6:31)], use = "complete.obs", method  = "spearman")
cor.genus <- cor(genus[, c(6:29)],
nmds.scores[, c(1:2)],
use = "complete.obs",
method = "spearman")
View(cor.genus)
write.csv(cor.genus, "../output/seabird-algaediv/organised_output/nmds_axis_correlation_by_genus_spearman.csv")
cor.mtest(nmds.gen[, c(6:31)])
cor.test(6:30, nmds.gen$NMDS1)
cor.test(nmds.gen[, c(6:29)), nmds.gen$NMDS1)
cor.test(nmds.gen[, c(6:29], nmds.gen$NMDS1)
cor.test(nmds.gen[, c(6:29)], nmds.gen$NMDS1)
nmds.gen[, c(6:29)]
library(tidyverse)
library(plyr)
library(jtools)
library(multcompView)
library(multcomp)
library(MASS) #for glmms
library(glmmTMB) #for glmms with a beta distribution
library(nlme) #for linear mixed effects models
library(lme4) #for linear mixed effects models
library(emmeans) #for multiple comparisons
library(car) #for qqplots
library(vcd) #for distplots of non-gaussian distributions
library(sjPlot)
library(mgcv) #for running beta distributions
#Bring in Microbes and seabird data
seabirds <- read.csv("../output/n15_seabirds_combined_no_iti.csv", strip.white = T, header = T)
microbes <- read.csv("../../microbiome_analyses/downstream_analyses/integration/output/nov2021_microbiome_metrics.csv")
#recode the site.name category so we can combine with seabird data
microbes$site.name[microbes$site.name == "A1"] <- "Aie_Protected"
microbes$site.name[microbes$site.name == "A2"] <- "Aie_Exposed"
microbes$site.name[microbes$site.name == "Re1"] <- "Reiono_Protected"
microbes$site.name[microbes$site.name == "Re2"] <- "Reiono_Exposed"
microbes$site.name[microbes$site.name == "Rm1"] <- "Rimatuu_Protected"
microbes$site.name[microbes$site.name == "Rm2"] <- "Rimatuu_Exposed"
microbes$site.name <- as.factor(microbes$site.name)
levels(microbes$site.name)
#Combine with seabird data:
microbes.seabirds <- merge(microbes, seabirds, by = "site.name", all = TRUE, no.dups = TRUE)
head(microbes.seabirds)
#Add a seabird level category
microbes.seabirds <-
microbes.seabirds%>%
mutate(seabird_level = case_when(breeding_biomass_kgha_side<10 ~"low",
breeding_biomass_kgha_side>10&breeding_biomass_kgha_side <200 ~"mid",
breeding_biomass_kgha_side>200 ~"high"))%>%
mutate(seabird_level = as.factor(seabird_level))%>%
mutate(seabird_level = fct_relevel(seabird_level, "low", "mid", "high"))
str(microbes.seabirds$distance.along.transect)
microbes.seabirds$Distance_to_shore <- as.factor(microbes.seabirds$distance.along.transect)
str(microbes.seabirds$seabird_level)
coral.microbes.seabirds <- microbes.seabirds %>% filter(sample.type == "coral")
water.microbes.seabirds <- microbes.seabirds %>% filter(sample.type ==  "water")
hist(coral.microbes.seabirds$Observed) #not normal
qqPlot(coral.microbes.seabirds$Observed) #terrible fit
#Check poisson and nbinomial because these are count data
distplot(coral.microbes.seabirds$Observed, type="poisson") #looks pretty good!
#Predictor variable is algae N15
#Fixed Effects with an interaction = exposure (distance from shore is incorporated in the n15 values, especially when paired here)
#Random effect = site name
cor.rich.glm <- glmer(Observed~algae.N15*Exposure + (1|site.name), family = "poisson", data = coral.microbes.seabirds)
plot(cor.rich.glm)
hist(resid(cor.rich.glm))
qqnorm(resid(cor.rich.glm)) #not perfect but so much better
summary(cor.rich.glm) #yes significant!
Anova(cor.rich.glm)
#Response: Observed
#                     Chisq Df Pr(>Chisq)
#algae.N15          73.4964  1    < 2e-16 ***
#Exposure            1.4389  1    0.23031
#algae.N15:Exposure  3.5884  1    0.05819 .
##okay, actually looks like no (or marginal) interactions, just mean n15 significant***
test(emtrends(cor.rich.glm, ~ Exposure, var = "algae.N15", adjust = "fdr"))
#Exposure  algae.N15.trend     SE  df z.ratio p.value
#Exposed             0.103 0.0243 Inf   4.244  <.0001
#Protected           0.164 0.0213 Inf   7.695  <.0001
#looks like exposure is significant??
test(emtrends(cor.rich.glm, pairwise~ Exposure, var = "algae.N15", adjust = "fdr"))
#contrast            estimate     SE  df z.ratio p.value
#Exposed - Protected  -0.0612 0.0323 Inf  -1.894  0.0582
#but the contrast is no significant effect of exposure.
range(coral.microbes.seabirds$algae.N15, na.rm = T)
rich_plot_dat <- emmip(cor.rich.glm,  ~ algae.N15|Exposure, at = list(algae.N15 = seq(2.73, 10.66, 0.1)), CIs = TRUE, plotit=FALSE, type = "response")
range(coral.microbes.seabirds[coral.microbes.seabirds$Exposure == "Protected",]$algae.N15, na.rm = T) #2.73, 10.66
range(coral.microbes.seabirds[coral.microbes.seabirds$Exposure == "Exposed",]$algae.N15, na.rm = T) #4.64, 8.45
rich_plot_dat.protected<-
rich_plot_dat%>%
filter(Exposure == "Protected")%>%
filter(algae.N15>=2.73&algae.N15<=10.66)
rich_plot_dat.exposed<-
rich_plot_dat%>%
filter(Exposure == "Exposed")%>%
filter(algae.N15>=4.64&algae.N15<=8.45)
my_colors <- RColorBrewer::brewer.pal(3, "Dark2")[c(1,2)]
##Plot the richness according to N15 & exposure
ggplot(coral.microbes.seabirds, aes(x = algae.N15, y = Observed, color = Exposure,
fill = Exposure, group = Exposure))+
#geom_point(stat = "summary", fun = "mean", alpha = 0.5, size  = 3) +
geom_point(aes(shape = Exposure))+
geom_line(data = rich_plot_dat.protected, aes(x = algae.N15, y = yvar))+
geom_ribbon(data = rich_plot_dat.protected, aes(x = algae.N15, y = yvar, ymin = LCL, ymax=UCL, fill = Exposure, color = Exposure), alpha = .2, lwd=0)+
geom_line(data = rich_plot_dat.exposed, aes(x = algae.N15, y = yvar))+
geom_ribbon(data = rich_plot_dat.exposed, aes(x = algae.N15, y = yvar, ymin = LCL, ymax=UCL, fill = Exposure, color = Exposure), alpha = .2, lwd=0)+
ylab("Microbial Observed ASV richness \n") +
xlab(expression(italic(delta)^15*N))+
scale_fill_manual(values = my_colors, labels = c('windward', 'leeward'))+
scale_color_manual(values = my_colors, labels = c('windward', 'leeward')) +
scale_shape_manual(values = c(24,  21), labels = c('windward', 'leeward'))+
theme_classic() +
theme(legend.position = c(0.85, 0.82)) +
theme(panel.border = element_rect(color = "black", fill = NA, linetype = 1, linewidth = 0.5))
rich_plot_dat_no_exp <- emmip(cor.rich.glm,  ~ algae.N15, at = list(algae.N15 = seq(2.73, 10.66, .1)), CIs = TRUE, plotit=FALSE, type = "response")
##Plot the richness according to N15 & exposure (combined effect line)--=--
ggplot(coral.microbes.seabirds, aes(x = algae.N15, y = Observed))+
#geom_point(stat = "summary", fun = "mean", alpha = 0.5, size  = 3) +
geom_point(aes(fill = Exposure, colour = Exposure, shape = Exposure))+
geom_line(data = rich_plot_dat_no_exp, aes(x = algae.N15, y = yvar))+
geom_ribbon(data = rich_plot_dat_no_exp, aes(x = algae.N15, y = yvar, ymin = LCL, ymax=UCL), alpha = .2, lwd=0)+
ylab("Microbial Observed ASV richness \n") +
xlab(expression(italic(delta)^15*N))+
scale_fill_manual(values = my_colors, labels = c('windward', 'leeward'))+
scale_color_manual(values = my_colors, labels = c('windward', 'leeward')) +
scale_shape_manual(values = c(24,  21), labels = c('windward', 'leeward'))+
theme_classic() +
theme(legend.position = c(0.85, 0.75)) +
theme(panel.border = element_rect(color = "black", fill = NA, linetype = 1, linewidth = 0.5))
ggsave("../output/seabird-microbes/clean_output/1_coral_micro-richness_model_HE.jpg", plot = last_plot(), width = 7, height = 5)
rich_plot_dat <- emmip(cor.rich.glm,  ~ algae.N15|Exposure, at = list(algae.N15 = seq(2.73, 10.66, 0.1)), CIs = TRUE, plotit=FALSE)
range(coral.microbes.seabirds[coral.microbes.seabirds$Exposure == "Protected",]$algae.N15, na.rm = T) #2.73, 10.66
range(coral.microbes.seabirds[coral.microbes.seabirds$Exposure == "Exposed",]$algae.N15, na.rm = T) #4.64, 8.45
rich_plot_dat.protected<-
rich_plot_dat%>%
filter(Exposure == "Protected")%>%
filter(algae.N15>=2.73&algae.N15<=10.66)
rich_plot_dat.exposed<-
rich_plot_dat%>%
filter(Exposure == "Exposed")%>%
filter(algae.N15>=4.64&algae.N15<=8.45)
my_colors <- RColorBrewer::brewer.pal(3, "Dark2")[c(1,2)]
##Plot the richness according to N15 & exposure
ggplot(coral.microbes.seabirds, aes(x = algae.N15, y = Observed, color = Exposure,
fill = Exposure, group = Exposure))+
#geom_point(stat = "summary", fun = "mean", alpha = 0.5, size  = 3) +
geom_point(aes(shape = Exposure))+
geom_line(data = rich_plot_dat.protected, aes(x = algae.N15, y = yvar))+
geom_ribbon(data = rich_plot_dat.protected, aes(x = algae.N15, y = yvar, ymin = LCL, ymax=UCL, fill = Exposure, color = Exposure), alpha = .2, lwd=0)+
geom_line(data = rich_plot_dat.exposed, aes(x = algae.N15, y = yvar))+
geom_ribbon(data = rich_plot_dat.exposed, aes(x = algae.N15, y = yvar, ymin = LCL, ymax=UCL, fill = Exposure, color = Exposure), alpha = .2, lwd=0)+
ylab("Microbial Observed ASV richness \n") +
xlab(expression(italic(delta)^15*N))+
scale_fill_manual(values = my_colors, labels = c('windward', 'leeward'))+
scale_color_manual(values = my_colors, labels = c('windward', 'leeward')) +
scale_shape_manual(values = c(24,  21), labels = c('windward', 'leeward'))+
theme_classic() +
theme(legend.position = c(0.85, 0.82)) +
theme(panel.border = element_rect(color = "black", fill = NA, linetype = 1, linewidth = 0.5))
rich_plot_dat_no_exp <- emmip(cor.rich.glm,  ~ algae.N15, at = list(algae.N15 = seq(2.73, 10.66, .1)), CIs = TRUE, plotit=FALSE)
##Plot the richness according to N15 & exposure (combined effect line)--=--
ggplot(coral.microbes.seabirds, aes(x = algae.N15, y = Observed))+
#geom_point(stat = "summary", fun = "mean", alpha = 0.5, size  = 3) +
geom_point(aes(fill = Exposure, colour = Exposure, shape = Exposure))+
geom_line(data = rich_plot_dat_no_exp, aes(x = algae.N15, y = yvar))+
geom_ribbon(data = rich_plot_dat_no_exp, aes(x = algae.N15, y = yvar, ymin = LCL, ymax=UCL), alpha = .2, lwd=0)+
ylab("Microbial Observed ASV richness \n") +
xlab(expression(italic(delta)^15*N))+
scale_fill_manual(values = my_colors, labels = c('windward', 'leeward'))+
scale_color_manual(values = my_colors, labels = c('windward', 'leeward')) +
scale_shape_manual(values = c(24,  21), labels = c('windward', 'leeward'))+
theme_classic() +
theme(legend.position = c(0.85, 0.75)) +
theme(panel.border = element_rect(color = "black", fill = NA, linetype = 1, linewidth = 0.5))
rich_plot_dat_no_exp <- emmip(cor.rich.glm,  ~ algae.N15, at = list(algae.N15 = seq(2.73, 10.66, .1)), CIs = TRUE, plotit=FALSE, type = "response")
##Plot the richness according to N15 & exposure (combined effect line)--=--
ggplot(coral.microbes.seabirds, aes(x = algae.N15, y = Observed))+
#geom_point(stat = "summary", fun = "mean", alpha = 0.5, size  = 3) +
geom_point(aes(fill = Exposure, colour = Exposure, shape = Exposure))+
geom_line(data = rich_plot_dat_no_exp, aes(x = algae.N15, y = yvar))+
geom_ribbon(data = rich_plot_dat_no_exp, aes(x = algae.N15, y = yvar, ymin = LCL, ymax=UCL), alpha = .2, lwd=0)+
ylab("Microbial Observed ASV richness \n") +
xlab(expression(italic(delta)^15*N))+
scale_fill_manual(values = my_colors, labels = c('windward', 'leeward'))+
scale_color_manual(values = my_colors, labels = c('windward', 'leeward')) +
scale_shape_manual(values = c(24,  21), labels = c('windward', 'leeward'))+
theme_classic() +
theme(legend.position = c(0.85, 0.75)) +
theme(panel.border = element_rect(color = "black", fill = NA, linetype = 1, linewidth = 0.5))
